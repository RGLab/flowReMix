treatment = treatment,
weights = NULL,
rate = 1, updateLag = 3,
nsamp = 40,
centerCovariance = FALSE,
maxIter = 8, tol = 1e-03))
library(flowReMix)
system.time(fit <- subsetResponseMixtureRcpp(count ~  treatment,
sub.population = factor(data$population),
N = parentcount, id =  ptid,
data = data,
treatment = treatment,
weights = NULL,
rate = 1, updateLag = 3,
nsamp = 40,
centerCovariance = FALSE,
maxIter = 8, tol = 1e-03))
library(flowReMix)
system.time(fit <- subsetResponseMixtureRcpp(count ~  treatment,
sub.population = factor(data$population),
N = parentcount, id =  ptid,
data = data,
treatment = treatment,
weights = NULL,
rate = 1, updateLag = 3,
nsamp = 40,
centerCovariance = FALSE,
maxIter = 8, tol = 1e-03))
library(flowReMix)
system.time(fit <- subsetResponseMixtureRcpp(count ~  treatment,
sub.population = factor(data$population),
N = parentcount, id =  ptid,
data = data,
treatment = treatment,
weights = NULL,
rate = 1, updateLag = 3,
nsamp = 40,
centerCovariance = FALSE,
maxIter = 8, tol = 1e-03))
library(flowReMix)
library(flowReMix)
system.time(fit <- subsetResponseMixtureRcpp(count ~  treatment,
sub.population = factor(data$population),
N = parentcount, id =  ptid,
data = data,
treatment = treatment,
weights = NULL,
rate = 1, updateLag = 3,
nsamp = 40,
centerCovariance = FALSE,
maxIter = 8, tol = 1e-03))
library(flowReMix)
system.time(fit <- subsetResponseMixtureRcpp(count ~  treatment,
sub.population = factor(data$population),
N = parentcount, id =  ptid,
data = data,
treatment = treatment,
weights = NULL,
rate = 1, updateLag = 3,
nsamp = 40,
centerCovariance = FALSE,
maxIter = 8, tol = 1e-03))
library(flowReMix)
system.time(fit <- subsetResponseMixtureRcpp(count ~  treatment,
sub.population = factor(data$population),
N = parentcount, id =  ptid,
data = data,
treatment = treatment,
weights = NULL,
rate = 1, updateLag = 3,
nsamp = 40,
centerCovariance = FALSE,
maxIter = 8, tol = 1e-03))
system.time(fit <- subsetResponseMixtureRcpp(count ~  treatment,
sub.population = factor(data$population),
N = parentcount, id =  ptid,
data = data,
treatment = treatment,
weights = NULL,
rate = 1, updateLag = 3,
nsamp = 40,
centerCovariance = FALSE,
maxIter = 8, tol = 1e-03))
as.integer(popInd)
subjectData$nullEta
subjectData$subpopInd
prop
length(prop)
library(flowReMix)
system.time(fit <- subsetResponseMixtureRcpp(count ~  treatment,
sub.population = factor(data$population),
N = parentcount, id =  ptid,
data = data,
treatment = treatment,
weights = NULL,
rate = 1, updateLag = 3,
nsamp = 40,
centerCovariance = FALSE,
maxIter = 8, tol = 1e-03))
subsetAssignGibbs(y, prop, N, isingCoefs,
subjectData$nullEta, subjectData$altEta,
covariance, nsamp, nSubsets, keepEach, MHcoef,
as.integer(popInd))
library(flowReMix)
system.time(fit <- subsetResponseMixtureRcpp(count ~  treatment,
sub.population = factor(data$population),
N = parentcount, id =  ptid,
data = data,
treatment = treatment,
weights = NULL,
rate = 1, updateLag = 3,
nsamp = 40,
centerCovariance = FALSE,
maxIter = 8, tol = 1e-03))
assignmentMat <- subsetAssignGibbs(y, prop, N, isingCoefs,
subjectData$nullEta, subjectData$altEta,
covariance, nsamp, nSubsets, keepEach, MHcoef,
as.integer(popInd))
library(flowReMix)
system.time(fit <- subsetResponseMixtureRcpp(count ~  treatment,
sub.population = factor(data$population),
N = parentcount, id =  ptid,
data = data,
treatment = treatment,
weights = NULL,
rate = 1, updateLag = 3,
nsamp = 40,
centerCovariance = FALSE,
maxIter = 8, tol = 1e-03))
library(flowReMix)
system.time(fit <- subsetResponseMixtureRcpp(count ~  treatment,
sub.population = factor(data$population),
N = parentcount, id =  ptid,
data = data,
treatment = treatment,
weights = NULL,
rate = 1, updateLag = 3,
nsamp = 40,
centerCovariance = FALSE,
maxIter = 8, tol = 1e-03))
library(flowReMix)
system.time(fit <- subsetResponseMixtureRcpp(count ~  treatment,
sub.population = factor(data$population),
N = parentcount, id =  ptid,
data = data,
treatment = treatment,
weights = NULL,
rate = 1, updateLag = 3,
nsamp = 40,
centerCovariance = FALSE,
maxIter = 8, tol = 1e-03))
library(flowReMix)
library(flowReMix)
system.time(fit <- subsetResponseMixtureRcpp(count ~  treatment,
sub.population = factor(data$population),
N = parentcount, id =  ptid,
data = data,
treatment = treatment,
weights = NULL,
rate = 1, updateLag = 3,
nsamp = 40,
centerCovariance = FALSE,
maxIter = 8, tol = 1e-03))
library(flowReMix)
library(flowReMix)
library(pROC)
cummean <- function(x) cumsum(x) / 1:length(x)
data(rv144)
#set.seed(502)
omit <- paste("P", c(1001, 1013, 1019, 1023, 1031, 1034, 1039, 1045,
1060, 1095, 1099, 1100, 1109, 1177, 1180, 1187,
1201, 1215, 1216, 1224, 1227, 1232, 1242, 1284),
sep = "")
par(mfrow = c(1, 1), mar = rep(4, 4))
data <- rv144
data <- subset(data, !(ptid %in% omit))
leaves <- unique(data$population)
selected_populations = c(c(1, 2))
data <- subset(data, population %in% leaves[selected_populations])
data$population <- factor(data$population)
data <- subset(data, stim != "sebctrl")
data$treatment <- as.numeric(data$stim == "env")
data$ptid <- as.numeric(data$ptid)
data$ptid[data$vaccine == "VACCINE"] <- data$ptid[data$vaccine == "VACCINE"] * 10^4
data$prop <- data$count / data$parentcount
data$population <- as.factor(data$population)
data <- data[order(data$population, data$ptid, data$stim, decreasing = FALSE), ]
system.time(fit <- subsetResponseMixtureRcpp(count ~  treatment,
sub.population = factor(data$population),
N = parentcount, id =  ptid,
data = data,
treatment = treatment,
weights = NULL,
rate = 1, updateLag = 3,
nsamp = 40,
centerCovariance = FALSE,
maxIter = 8, tol = 1e-03))
?dbinom
library(flowReMix)
library(flowReMix)
library(pROC)
cummean <- function(x) cumsum(x) / 1:length(x)
data(rv144)
#set.seed(502)
omit <- paste("P", c(1001, 1013, 1019, 1023, 1031, 1034, 1039, 1045,
1060, 1095, 1099, 1100, 1109, 1177, 1180, 1187,
1201, 1215, 1216, 1224, 1227, 1232, 1242, 1284),
sep = "")
par(mfrow = c(1, 1), mar = rep(4, 4))
data <- rv144
data <- subset(data, !(ptid %in% omit))
leaves <- unique(data$population)
selected_populations = c(c(1, 2))
data <- subset(data, population %in% leaves[selected_populations])
data$population <- factor(data$population)
data <- subset(data, stim != "sebctrl")
data$treatment <- as.numeric(data$stim == "env")
data$ptid <- as.numeric(data$ptid)
data$ptid[data$vaccine == "VACCINE"] <- data$ptid[data$vaccine == "VACCINE"] * 10^4
data$prop <- data$count / data$parentcount
data$population <- as.factor(data$population)
data <- data[order(data$population, data$ptid, data$stim, decreasing = FALSE), ]
system.time(fit <- subsetResponseMixtureRcpp(count ~  treatment,
sub.population = factor(data$population),
N = parentcount, id =  ptid,
data = data,
treatment = treatment,
weights = NULL,
rate = 1, updateLag = 3,
nsamp = 40,
centerCovariance = FALSE,
maxIter = 8, tol = 1e-03))
library(flowReMix)
library(flowReMix)
library(pROC)
cummean <- function(x) cumsum(x) / 1:length(x)
data(rv144)
#set.seed(502)
omit <- paste("P", c(1001, 1013, 1019, 1023, 1031, 1034, 1039, 1045,
1060, 1095, 1099, 1100, 1109, 1177, 1180, 1187,
1201, 1215, 1216, 1224, 1227, 1232, 1242, 1284),
sep = "")
par(mfrow = c(1, 1), mar = rep(4, 4))
data <- rv144
data <- subset(data, !(ptid %in% omit))
leaves <- unique(data$population)
selected_populations = c(c(1, 2))
data <- subset(data, population %in% leaves[selected_populations])
data$population <- factor(data$population)
data <- subset(data, stim != "sebctrl")
data$treatment <- as.numeric(data$stim == "env")
data$ptid <- as.numeric(data$ptid)
data$ptid[data$vaccine == "VACCINE"] <- data$ptid[data$vaccine == "VACCINE"] * 10^4
data$prop <- data$count / data$parentcount
data$population <- as.factor(data$population)
data <- data[order(data$population, data$ptid, data$stim, decreasing = FALSE), ]
system.time(fit <- subsetResponseMixtureRcpp(count ~  treatment,
sub.population = factor(data$population),
N = parentcount, id =  ptid,
data = data,
treatment = treatment,
weights = NULL,
rate = 1, updateLag = 3,
nsamp = 40,
centerCovariance = FALSE,
maxIter = 8, tol = 1e-03))
library(flowReMix)
library(flowReMix)
library(pROC)
cummean <- function(x) cumsum(x) / 1:length(x)
data(rv144)
#set.seed(502)
omit <- paste("P", c(1001, 1013, 1019, 1023, 1031, 1034, 1039, 1045,
1060, 1095, 1099, 1100, 1109, 1177, 1180, 1187,
1201, 1215, 1216, 1224, 1227, 1232, 1242, 1284),
sep = "")
par(mfrow = c(1, 1), mar = rep(4, 4))
data <- rv144
data <- subset(data, !(ptid %in% omit))
leaves <- unique(data$population)
selected_populations = c(c(1, 2))
data <- subset(data, population %in% leaves[selected_populations])
data$population <- factor(data$population)
data <- subset(data, stim != "sebctrl")
data$treatment <- as.numeric(data$stim == "env")
data$ptid <- as.numeric(data$ptid)
data$ptid[data$vaccine == "VACCINE"] <- data$ptid[data$vaccine == "VACCINE"] * 10^4
data$prop <- data$count / data$parentcount
data$population <- as.factor(data$population)
data <- data[order(data$population, data$ptid, data$stim, decreasing = FALSE), ]
system.time(fit <- subsetResponseMixtureRcpp(count ~  treatment,
sub.population = factor(data$population),
N = parentcount, id =  ptid,
data = data,
treatment = treatment,
weights = NULL,
rate = 1, updateLag = 3,
nsamp = 40,
centerCovariance = FALSE,
maxIter = 8, tol = 1e-03))
library(flowReMix)
library(flowReMix)
library(pROC)
cummean <- function(x) cumsum(x) / 1:length(x)
data(rv144)
#set.seed(502)
omit <- paste("P", c(1001, 1013, 1019, 1023, 1031, 1034, 1039, 1045,
1060, 1095, 1099, 1100, 1109, 1177, 1180, 1187,
1201, 1215, 1216, 1224, 1227, 1232, 1242, 1284),
sep = "")
par(mfrow = c(1, 1), mar = rep(4, 4))
data <- rv144
data <- subset(data, !(ptid %in% omit))
leaves <- unique(data$population)
selected_populations = c(c(1, 2))
data <- subset(data, population %in% leaves[selected_populations])
data$population <- factor(data$population)
data <- subset(data, stim != "sebctrl")
data$treatment <- as.numeric(data$stim == "env")
data$ptid <- as.numeric(data$ptid)
data$ptid[data$vaccine == "VACCINE"] <- data$ptid[data$vaccine == "VACCINE"] * 10^4
data$prop <- data$count / data$parentcount
data$population <- as.factor(data$population)
data <- data[order(data$population, data$ptid, data$stim, decreasing = FALSE), ]
system.time(fit <- subsetResponseMixtureRcpp(count ~  treatment,
sub.population = factor(data$population),
N = parentcount, id =  ptid,
data = data,
treatment = treatment,
weights = NULL,
rate = 1, updateLag = 3,
nsamp = 40,
centerCovariance = FALSE,
maxIter = 8, tol = 1e-03))
library(flowReMix)
library(flowReMix)
t
library(flowReMix)
library(pROC)
cummean <- function(x) cumsum(x) / 1:length(x)
data(rv144)
#set.seed(502)
omit <- paste("P", c(1001, 1013, 1019, 1023, 1031, 1034, 1039, 1045,
1060, 1095, 1099, 1100, 1109, 1177, 1180, 1187,
1201, 1215, 1216, 1224, 1227, 1232, 1242, 1284),
sep = "")
par(mfrow = c(1, 1), mar = rep(4, 4))
data <- rv144
data <- subset(data, !(ptid %in% omit))
leaves <- unique(data$population)
selected_populations = c(c(1, 2))
data <- subset(data, population %in% leaves[selected_populations])
data$population <- factor(data$population)
data <- subset(data, stim != "sebctrl")
data$treatment <- as.numeric(data$stim == "env")
data$ptid <- as.numeric(data$ptid)
data$ptid[data$vaccine == "VACCINE"] <- data$ptid[data$vaccine == "VACCINE"] * 10^4
data$prop <- data$count / data$parentcount
data$population <- as.factor(data$population)
data <- data[order(data$population, data$ptid, data$stim, decreasing = FALSE), ]
system.time(fit <- subsetResponseMixtureRcpp(count ~  treatment,
sub.population = factor(data$population),
N = parentcount, id =  ptid,
data = data,
treatment = treatment,
weights = NULL,
rate = 1, updateLag = 3,
nsamp = 40,
centerCovariance = FALSE,
maxIter = 8, tol = 1e-03))
library(flowReMix)
library(flowReMix)
library(pROC)
cummean <- function(x) cumsum(x) / 1:length(x)
data(rv144)
#set.seed(502)
omit <- paste("P", c(1001, 1013, 1019, 1023, 1031, 1034, 1039, 1045,
1060, 1095, 1099, 1100, 1109, 1177, 1180, 1187,
1201, 1215, 1216, 1224, 1227, 1232, 1242, 1284),
sep = "")
par(mfrow = c(1, 1), mar = rep(4, 4))
data <- rv144
data <- subset(data, !(ptid %in% omit))
leaves <- unique(data$population)
selected_populations = c(c(1, 2))
data <- subset(data, population %in% leaves[selected_populations])
data$population <- factor(data$population)
data <- subset(data, stim != "sebctrl")
data$treatment <- as.numeric(data$stim == "env")
data$ptid <- as.numeric(data$ptid)
data$ptid[data$vaccine == "VACCINE"] <- data$ptid[data$vaccine == "VACCINE"] * 10^4
data$prop <- data$count / data$parentcount
data$population <- as.factor(data$population)
data <- data[order(data$population, data$ptid, data$stim, decreasing = FALSE), ]
system.time(fit <- subsetResponseMixtureRcpp(count ~  treatment,
sub.population = factor(data$population),
N = parentcount, id =  ptid,
data = data,
treatment = treatment,
weights = NULL,
rate = 1, updateLag = 3,
nsamp = 40,
centerCovariance = FALSE,
maxIter = 8, tol = 1e-03))
library(flowReMix)
library(flowReMix)
library(flowReMix)
library(pROC)
cummean <- function(x) cumsum(x) / 1:length(x)
data(rv144)
#set.seed(502)
omit <- paste("P", c(1001, 1013, 1019, 1023, 1031, 1034, 1039, 1045,
1060, 1095, 1099, 1100, 1109, 1177, 1180, 1187,
1201, 1215, 1216, 1224, 1227, 1232, 1242, 1284),
sep = "")
par(mfrow = c(1, 1), mar = rep(4, 4))
data <- rv144
data <- subset(data, !(ptid %in% omit))
leaves <- unique(data$population)
selected_populations = c(c(1, 2))
data <- subset(data, population %in% leaves[selected_populations])
data$population <- factor(data$population)
data <- subset(data, stim != "sebctrl")
data$treatment <- as.numeric(data$stim == "env")
data$ptid <- as.numeric(data$ptid)
data$ptid[data$vaccine == "VACCINE"] <- data$ptid[data$vaccine == "VACCINE"] * 10^4
data$prop <- data$count / data$parentcount
data$population <- as.factor(data$population)
data <- data[order(data$population, data$ptid, data$stim, decreasing = FALSE), ]
system.time(fit <- subsetResponseMixtureRcpp(count ~  treatment,
sub.population = factor(data$population),
N = parentcount, id =  ptid,
data = data,
treatment = treatment,
weights = NULL,
rate = 1, updateLag = 3,
nsamp = 40,
centerCovariance = FALSE,
maxIter = 8, tol = 1e-03))
library(flowReMix)
library(flowReMix)
library(pROC)
cummean <- function(x) cumsum(x) / 1:length(x)
data(rv144)
#set.seed(502)
omit <- paste("P", c(1001, 1013, 1019, 1023, 1031, 1034, 1039, 1045,
1060, 1095, 1099, 1100, 1109, 1177, 1180, 1187,
1201, 1215, 1216, 1224, 1227, 1232, 1242, 1284),
sep = "")
par(mfrow = c(1, 1), mar = rep(4, 4))
data <- rv144
data <- subset(data, !(ptid %in% omit))
leaves <- unique(data$population)
selected_populations = c(c(1, 2))
data <- subset(data, population %in% leaves[selected_populations])
data$population <- factor(data$population)
data <- subset(data, stim != "sebctrl")
data$treatment <- as.numeric(data$stim == "env")
data$ptid <- as.numeric(data$ptid)
data$ptid[data$vaccine == "VACCINE"] <- data$ptid[data$vaccine == "VACCINE"] * 10^4
data$prop <- data$count / data$parentcount
data$population <- as.factor(data$population)
data <- data[order(data$population, data$ptid, data$stim, decreasing = FALSE), ]
system.time(fit <- subsetResponseMixtureRcpp(count ~  treatment,
sub.population = factor(data$population),
N = parentcount, id =  ptid,
data = data,
treatment = treatment,
weights = NULL,
rate = 1, updateLag = 3,
nsamp = 40,
centerCovariance = FALSE,
maxIter = 8, tol = 1e-03))
library(flowReMix)
library(pROC)
cummean <- function(x) cumsum(x) / 1:length(x)
data(rv144)
#set.seed(502)
omit <- paste("P", c(1001, 1013, 1019, 1023, 1031, 1034, 1039, 1045,
1060, 1095, 1099, 1100, 1109, 1177, 1180, 1187,
1201, 1215, 1216, 1224, 1227, 1232, 1242, 1284),
sep = "")
par(mfrow = c(1, 1), mar = rep(4, 4))
data <- rv144
data <- subset(data, !(ptid %in% omit))
leaves <- unique(data$population)
selected_populations = c(c(1, 2))
data <- subset(data, population %in% leaves[selected_populations])
data$population <- factor(data$population)
data <- subset(data, stim != "sebctrl")
data$treatment <- as.numeric(data$stim == "env")
data$ptid <- as.numeric(data$ptid)
data$ptid[data$vaccine == "VACCINE"] <- data$ptid[data$vaccine == "VACCINE"] * 10^4
data$prop <- data$count / data$parentcount
data$population <- as.factor(data$population)
data <- data[order(data$population, data$ptid, data$stim, decreasing = FALSE), ]
system.time(fit <- subsetResponseMixtureRcpp(count ~  treatment,
sub.population = factor(data$population),
N = parentcount, id =  ptid,
data = data,
treatment = treatment,
weights = NULL,
rate = 1, updateLag = 3,
nsamp = 40,
centerCovariance = FALSE,
maxIter = 8, tol = 1e-03))
assignmentMat <- subsetAssignGibbs(y, prop, N, isingCoefs,
subjectData$nullEta, subjectData$altEta,
covariance, nsamp, nSubsets, keepEach, MHcoef,
as.integer(popInd))
assignmentMat
library(flowReMix)
