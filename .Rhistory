tempdat
names(tempdat)
ggplot(tempdat, aes(x = daynum.x, y = stimprop - controlprop, col = ptid)) +
geom_point() + geom_line() +
facet_wrap(~ population)
ggplot(tempdat, aes(x = daynum.x, y = stimprop - controlprop, col = ptid)) +
geom_point() + geom_line() +
facet_wrap(~ population, scales = "free_y")
ggplot(tempdat, aes(x = daynum.x, y = stimprop - controlprop, col = ptid)) +
geom_point() + geom_line() +
facet_wrap(~ population, scales = "free_y") +
geom_hline(yintercept = 0)
ggplot(tempdat, aes(x = daynum.x, y = stimprop - controlprop, col = ptid)) +
geom_point() + geom_line() +
facet_wrap(~ population, scales = "free_y") +
geom_hline(yintercept = 0)
50/0.05
50/0.05 *%
50/0.05 *2
1/0.05/50
1/(0.05/50)
fit
fitList
fitList[[1]]
j <- 1
i <- j
tempdat <- subset(malaria, parent == parents[j])
tempdat <- tempdat[order(tempdat$ptid, tempdat$population, tempdat$stim), ]
by(tempdat, tempdat$population, function(x) do.call("cbind", by(x, x$visitno, function(y) y$count)))
if(i == 1) {
tempdat <- subset(tempdat, population != "4+/IL4+")
}
if(i == 3) {
tempdat <- subset(tempdat, !(population %in% c("PD-1+/IL21+", "PD-1+/IL4+")))
}
#else if(i == 4) {
#   next
# } else if(i == 6) {
#   tempdat <- subset(tempdat, population != "8+/CXCR5+/TNFa+")
#   next
# } else if(i == 7) {
#   next
# } else if(j == 9) {
#   next
# } else if(j == 10) {
#   next
# }
tempdat$treatment <- factor(as.numeric(tempdat$stim == "PfRBC"))
tempdat <- subset(tempdat, visitno != "pos")
system.time(fit <- subsetResponseMixtureRcpp(count ~  treatment * visitno,
sub.population = factor(tempdat$population),
N = parentcount, id =  ptid,
data = tempdat,
treatment = treatment,
updateLag = 5,
nsamp = 40, maxIter = 15,
initMHcoef = 1,
randomAssignProb = 0.1,
covarianceMethod = "sparse",
sparseGraph = TRUE, betaDispersion = TRUE,
centerCovariance = FALSE))
fitList[[j]] <- fit
?geom_smooth
fit <- fitList[[j]]
fit
ntimes <- length(unique(tempdat$visitno))
ntimes
times <- unique(tempdat$visitno)
ntimes <- length(times)
times
ntimes
rep(times, 2)
pred <- data.frame(times = rep(times, 2),
type = c(rep("response", ntimes), rep("nonresponse", ntimes)))
pred
coefs <- fit$coefficients[[i]]
coefs
names(fit$coefficients)
names(fit$coefficients[[1]])
predictions <- coefs[[1]]
coefs[[1]]
predictions <- rep(coefs[[1]], ntimes)
predictions
times
predictions <- rep(coefs[[1]], ntimes)
predictions <- predictions + c(0, coefs[c(6, 4, 5, 3)])
predictions
predictions <- predictions + coefs[c(2, 10, 8, 9, 7)]
predictions
pred <- data.frame(times = rep(times, 2),
type = c(rep("response", ntimes), rep("nonresponse", ntimes)))
coefs <- fit$coefficients[[i]]
# nonresponse
predictions <- rep(coefs[[1]], ntimes)
predictions <- predictions + c(0, coefs[c(6, 4, 5, 3)])
pred$eta[1:ntimes] <- predictions
# response
predictions <- predictions + coefs[c(2, 10, 8, 9, 7)]
pred$eta[(ntimes + 1):(times * 2)] <- predictions
pred$prop <- 1 / (1 + exp(-pred$eta))
pred <- data.frame(times = rep(times, 2),
type = c(rep("response", ntimes), rep("nonresponse", ntimes)))
coefs <- fit$coefficients[[i]]
# nonresponse
predictions <- rep(coefs[[1]], ntimes)
predictions <- predictions + c(0, coefs[c(6, 4, 5, 3)])
pred$eta[1:ntimes] <- predictions
# response
predictions <- predictions + coefs[c(2, 10, 8, 9, 7)]
pred$eta[(ntimes + 1):(ntimes * 2)] <- predictions
pred$prop <- 1 / (1 + exp(-pred$eta))
pred
names(fit$coefficients)
pred$population <- names(fit$coefficients)[i]
pred
times <- unique(tempdat$visitno)
ntimes <- length(times)
predlist <- list()
for(i in 1:length(fit)) {
pred <- data.frame(times = rep(times, 2),
type = c(rep("response", ntimes), rep("nonresponse", ntimes)))
coefs <- fit$coefficients[[i]]
# nonresponse
predictions <- rep(coefs[[1]], ntimes)
predictions <- predictions + c(0, coefs[c(6, 4, 5, 3)])
pred$eta[1:ntimes] <- predictions
# response
predictions <- predictions + coefs[c(2, 10, 8, 9, 7)]
pred$eta[(ntimes + 1):(ntimes * 2)] <- predictions
pred$prop <- 1 / (1 + exp(-pred$eta))
pred$population <- names(fit$coefficients)[i]
predlist[[i]] <- pred
}
predicted <- do.call("rbind", predlist)
predicted
ggplot(predicted) +
geom_line(aes(x = times, y = log(prop), col = population, linetype = type))
ggplot(predicted) +
geom_line(aes(x = as.numeric(times), y = log(prop), col = population, linetype = type))
fit[[2]]
j <- 2
fit <- fitList[[j]]
tempdat <- subset(malaria, parent == parents[j])
tempdat$daynum <- 0
tempdat$daynum[tempdat$visitno == "Day 9"] <- 1
tempdat$daynum[tempdat$visitno == "pos"] <- 2
tempdat$daynum[tempdat$visitno == "Day 28"] <- 3
tempdat$daynum[tempdat$visitno == "Day 56"] <- 4
tempdat$daynum[tempdat$visitno == "Day 168"] <- 5
tempdat$logprop <- with(tempdat, log((count + 1)/parentcount + 10^-5))
control <- subset(tempdat, stim == "control")
stim <- subset(tempdat, stim == "PfRBC")
names(stim)[13] <- "stimprop"
names(control)[13] <- "controlprop"
tempdat <- merge(stim, control, by = c("ptid", "population", "visitno"))
ggplot(tempdat) + geom_point(aes(x = controlprop, y = stimprop, col = ptid)) +
geom_abline(intercept = 0, slope = 1) +
facet_grid(visitno ~ population)
ggplot(tempdat, aes(x = daynum.x, y = stimprop - controlprop, col = ptid)) +
geom_point() + geom_line() +
facet_wrap(~ population, scales = "free_y") +
geom_hline(yintercept = 0)
# Extract predicted values
times <- unique(tempdat$visitno)
ntimes <- length(times)
predlist <- list()
for(i in 1:length(fit)) {
pred <- data.frame(times = rep(times, 2),
type = c(rep("response", ntimes), rep("nonresponse", ntimes)))
coefs <- fit$coefficients[[i]]
# nonresponse
predictions <- rep(coefs[[1]], ntimes)
predictions <- predictions + c(0, coefs[c(6, 4, 5, 3)])
pred$eta[1:ntimes] <- predictions
# response
predictions <- predictions + coefs[c(2, 10, 8, 9, 7)]
pred$eta[(ntimes + 1):(ntimes * 2)] <- predictions
pred$prop <- 1 / (1 + exp(-pred$eta))
pred$population <- names(fit$coefficients)[i]
predlist[[i]] <- pred
}
predicted <- do.call("rbind", predlist)
ggplot(predicted) +
geom_line(aes(x = as.numeric(times), y = log(prop), col = population, linetype = type))
fit[[2]]
j <- 2
i <- j
tempdat <- subset(malaria, parent == parents[j])
tempdat <- tempdat[order(tempdat$ptid, tempdat$population, tempdat$stim), ]
by(tempdat, tempdat$population, function(x) do.call("cbind", by(x, x$visitno, function(y) y$count)))
if(i == 1) {
tempdat <- subset(tempdat, population != "4+/IL4+")
}
if(i == 3) {
tempdat <- subset(tempdat, !(population %in% c("PD-1+/IL21+", "PD-1+/IL4+")))
}
#else if(i == 4) {
#   next
# } else if(i == 6) {
#   tempdat <- subset(tempdat, population != "8+/CXCR5+/TNFa+")
#   next
# } else if(i == 7) {
#   next
# } else if(j == 9) {
#   next
# } else if(j == 10) {
#   next
# }
tempdat$treatment <- factor(as.numeric(tempdat$stim == "PfRBC"))
tempdat <- subset(tempdat, visitno != "pos")
system.time(fit <- subsetResponseMixtureRcpp(count ~  treatment * visitno,
sub.population = factor(tempdat$population),
N = parentcount, id =  ptid,
data = tempdat,
treatment = treatment,
updateLag = 5,
nsamp = 40, maxIter = 15,
initMHcoef = 1,
randomAssignProb = 0.1,
covarianceMethod = "sparse",
sparseGraph = TRUE, betaDispersion = TRUE,
centerCovariance = FALSE))
fitList[[j]] <- fit
j <- 2
fit <- fitList[[j]]
tempdat <- subset(malaria, parent == parents[j])
tempdat$daynum <- 0
tempdat$daynum[tempdat$visitno == "Day 9"] <- 1
tempdat$daynum[tempdat$visitno == "pos"] <- 2
tempdat$daynum[tempdat$visitno == "Day 28"] <- 3
tempdat$daynum[tempdat$visitno == "Day 56"] <- 4
tempdat$daynum[tempdat$visitno == "Day 168"] <- 5
tempdat$logprop <- with(tempdat, log((count + 1)/parentcount + 10^-5))
control <- subset(tempdat, stim == "control")
stim <- subset(tempdat, stim == "PfRBC")
names(stim)[13] <- "stimprop"
names(control)[13] <- "controlprop"
tempdat <- merge(stim, control, by = c("ptid", "population", "visitno"))
ggplot(tempdat) + geom_point(aes(x = controlprop, y = stimprop, col = ptid)) +
geom_abline(intercept = 0, slope = 1) +
facet_grid(visitno ~ population)
ggplot(tempdat, aes(x = daynum.x, y = stimprop - controlprop, col = ptid)) +
geom_point() + geom_line() +
facet_wrap(~ population, scales = "free_y") +
geom_hline(yintercept = 0)
# Extract predicted values
times <- unique(tempdat$visitno)
ntimes <- length(times)
predlist <- list()
for(i in 1:length(fit)) {
pred <- data.frame(times = rep(times, 2),
type = c(rep("response", ntimes), rep("nonresponse", ntimes)))
coefs <- fit$coefficients[[i]]
# nonresponse
predictions <- rep(coefs[[1]], ntimes)
predictions <- predictions + c(0, coefs[c(6, 4, 5, 3)])
pred$eta[1:ntimes] <- predictions
# response
predictions <- predictions + coefs[c(2, 10, 8, 9, 7)]
pred$eta[(ntimes + 1):(ntimes * 2)] <- predictions
pred$prop <- 1 / (1 + exp(-pred$eta))
pred$population <- names(fit$coefficients)[i]
predlist[[i]] <- pred
}
predicted <- do.call("rbind", predlist)
ggplot(predicted) +
geom_line(aes(x = as.numeric(times), y = log(prop), col = population, linetype = type))
j <- 3
fit <- fitList[[j]]
tempdat <- subset(malaria, parent == parents[j])
tempdat$daynum <- 0
tempdat$daynum[tempdat$visitno == "Day 9"] <- 1
tempdat$daynum[tempdat$visitno == "pos"] <- 2
tempdat$daynum[tempdat$visitno == "Day 28"] <- 3
tempdat$daynum[tempdat$visitno == "Day 56"] <- 4
tempdat$daynum[tempdat$visitno == "Day 168"] <- 5
tempdat$logprop <- with(tempdat, log((count + 1)/parentcount + 10^-5))
control <- subset(tempdat, stim == "control")
stim <- subset(tempdat, stim == "PfRBC")
names(stim)[13] <- "stimprop"
names(control)[13] <- "controlprop"
tempdat <- merge(stim, control, by = c("ptid", "population", "visitno"))
ggplot(tempdat) + geom_point(aes(x = controlprop, y = stimprop, col = ptid)) +
geom_abline(intercept = 0, slope = 1) +
facet_grid(visitno ~ population)
ggplot(tempdat, aes(x = daynum.x, y = stimprop - controlprop, col = ptid)) +
geom_point() + geom_line() +
facet_wrap(~ population, scales = "free_y") +
geom_hline(yintercept = 0)
# Extract predicted values
times <- unique(tempdat$visitno)
ntimes <- length(times)
predlist <- list()
for(i in 1:length(fit)) {
pred <- data.frame(times = rep(times, 2),
type = c(rep("response", ntimes), rep("nonresponse", ntimes)))
coefs <- fit$coefficients[[i]]
# nonresponse
predictions <- rep(coefs[[1]], ntimes)
predictions <- predictions + c(0, coefs[c(6, 4, 5, 3)])
pred$eta[1:ntimes] <- predictions
# response
predictions <- predictions + coefs[c(2, 10, 8, 9, 7)]
pred$eta[(ntimes + 1):(ntimes * 2)] <- predictions
pred$prop <- 1 / (1 + exp(-pred$eta))
pred$population <- names(fit$coefficients)[i]
predlist[[i]] <- pred
}
predicted <- do.call("rbind", predlist)
ggplot(predicted) +
geom_line(aes(x = as.numeric(times), y = log(prop), col = population, linetype = type))
ggplot(subset(predicted, population != "PD-1+/IFNg+")) +
geom_line(aes(x = as.numeric(times), y = log(prop), col = population, linetype = type))
fit[[4]]
j <- 4
fit <- fitList[[j]]
tempdat <- subset(malaria, parent == parents[j])
tempdat$daynum <- 0
tempdat$daynum[tempdat$visitno == "Day 9"] <- 1
tempdat$daynum[tempdat$visitno == "pos"] <- 2
tempdat$daynum[tempdat$visitno == "Day 28"] <- 3
tempdat$daynum[tempdat$visitno == "Day 56"] <- 4
tempdat$daynum[tempdat$visitno == "Day 168"] <- 5
tempdat$logprop <- with(tempdat, log((count + 1)/parentcount + 10^-5))
control <- subset(tempdat, stim == "control")
stim <- subset(tempdat, stim == "PfRBC")
names(stim)[13] <- "stimprop"
names(control)[13] <- "controlprop"
tempdat <- merge(stim, control, by = c("ptid", "population", "visitno"))
ggplot(tempdat) + geom_point(aes(x = controlprop, y = stimprop, col = ptid)) +
geom_abline(intercept = 0, slope = 1) +
facet_grid(visitno ~ population)
ggplot(tempdat, aes(x = daynum.x, y = stimprop - controlprop, col = ptid)) +
geom_point() + geom_line() +
facet_wrap(~ population, scales = "free_y") +
geom_hline(yintercept = 0)
# Extract predicted values
times <- unique(tempdat$visitno)
ntimes <- length(times)
predlist <- list()
for(i in 1:length(fit)) {
pred <- data.frame(times = rep(times, 2),
type = c(rep("response", ntimes), rep("nonresponse", ntimes)))
coefs <- fit$coefficients[[i]]
# nonresponse
predictions <- rep(coefs[[1]], ntimes)
predictions <- predictions + c(0, coefs[c(6, 4, 5, 3)])
pred$eta[1:ntimes] <- predictions
# response
predictions <- predictions + coefs[c(2, 10, 8, 9, 7)]
pred$eta[(ntimes + 1):(ntimes * 2)] <- predictions
pred$prop <- 1 / (1 + exp(-pred$eta))
pred$population <- names(fit$coefficients)[i]
predlist[[i]] <- pred
}
predicted <- do.call("rbind", predlist)
ggplot(subset(predicted, population != "PD-1+/IFNg+")) +
geom_line(aes(x = as.numeric(times), y = log(prop), col = population, linetype = type))
fitList[[4]]
j <- 4
i <- j
tempdat <- subset(malaria, parent == parents[j])
tempdat <- tempdat[order(tempdat$ptid, tempdat$population, tempdat$stim), ]
by(tempdat, tempdat$population, function(x) do.call("cbind", by(x, x$visitno, function(y) y$count)))
tempdat$treatment <- factor(as.numeric(tempdat$stim == "PfRBC"))
tempdat <- subset(tempdat, visitno != "pos")
system.time(fit <- subsetResponseMixtureRcpp(count ~  treatment * visitno,
sub.population = factor(tempdat$population),
N = parentcount, id =  ptid,
data = tempdat,
treatment = treatment,
updateLag = 5,
nsamp = 40, maxIter = 15,
initMHcoef = 1,
randomAssignProb = 0.1,
covarianceMethod = "sparse",
sparseGraph = TRUE, betaDispersion = TRUE,
centerCovariance = FALSE))
j <- 4
fit <- fitList[[j]]
tempdat <- subset(malaria, parent == parents[j])
tempdat$daynum <- 0
tempdat$daynum[tempdat$visitno == "Day 9"] <- 1
tempdat$daynum[tempdat$visitno == "pos"] <- 2
tempdat$daynum[tempdat$visitno == "Day 28"] <- 3
tempdat$daynum[tempdat$visitno == "Day 56"] <- 4
tempdat$daynum[tempdat$visitno == "Day 168"] <- 5
tempdat$logprop <- with(tempdat, log((count + 1)/parentcount + 10^-5))
control <- subset(tempdat, stim == "control")
stim <- subset(tempdat, stim == "PfRBC")
names(stim)[13] <- "stimprop"
names(control)[13] <- "controlprop"
tempdat <- merge(stim, control, by = c("ptid", "population", "visitno"))
ggplot(tempdat) + geom_point(aes(x = controlprop, y = stimprop, col = ptid)) +
geom_abline(intercept = 0, slope = 1) +
facet_grid(visitno ~ population)
ggplot(tempdat, aes(x = daynum.x, y = stimprop - controlprop, col = ptid)) +
geom_point() + geom_line() +
facet_wrap(~ population, scales = "free_y") +
geom_hline(yintercept = 0)
# Extract predicted values
times <- unique(tempdat$visitno)
ntimes <- length(times)
predlist <- list()
for(i in 1:length(fit)) {
pred <- data.frame(times = rep(times, 2),
type = c(rep("response", ntimes), rep("nonresponse", ntimes)))
coefs <- fit$coefficients[[i]]
# nonresponse
predictions <- rep(coefs[[1]], ntimes)
predictions <- predictions + c(0, coefs[c(6, 4, 5, 3)])
pred$eta[1:ntimes] <- predictions
# response
predictions <- predictions + coefs[c(2, 10, 8, 9, 7)]
pred$eta[(ntimes + 1):(ntimes * 2)] <- predictions
pred$prop <- 1 / (1 + exp(-pred$eta))
pred$population <- names(fit$coefficients)[i]
predlist[[i]] <- pred
}
predicted <- do.call("rbind", predlist)
ggplot(subset(predicted, population != "PD-1+/IFNg+")) +
geom_line(aes(x = as.numeric(times), y = log(prop), col = population, linetype = type))
j <- 5
i <- j
tempdat <- subset(malaria, parent == parents[j])
tempdat <- tempdat[order(tempdat$ptid, tempdat$population, tempdat$stim), ]
by(tempdat, tempdat$population, function(x) do.call("cbind", by(x, x$visitno, function(y) y$count)))
if(i == 1) {
tempdat <- subset(tempdat, population != "4+/IL4+")
}
if(i == 3) {
tempdat <- subset(tempdat, !(population %in% c("PD-1+/IL21+", "PD-1+/IL4+")))
}
#else if(i == 4) {
#   next
# } else if(i == 6) {
#   tempdat <- subset(tempdat, population != "8+/CXCR5+/TNFa+")
#   next
# } else if(i == 7) {
#   next
# } else if(j == 9) {
#   next
# } else if(j == 10) {
#   next
# }
tempdat$treatment <- factor(as.numeric(tempdat$stim == "PfRBC"))
tempdat <- subset(tempdat, visitno != "pos")
system.time(fit <- subsetResponseMixtureRcpp(count ~  treatment * visitno,
sub.population = factor(tempdat$population),
N = parentcount, id =  ptid,
data = tempdat,
treatment = treatment,
updateLag = 5,
nsamp = 40, maxIter = 15,
initMHcoef = 1,
randomAssignProb = 0.1,
covarianceMethod = "sparse",
sparseGraph = TRUE, betaDispersion = TRUE,
centerCovariance = FALSE))
fitList[[j]] <- fit
j
j <- 5
fit <- fitList[[j]]
tempdat <- subset(malaria, parent == parents[j])
tempdat$daynum <- 0
tempdat$daynum[tempdat$visitno == "Day 9"] <- 1
tempdat$daynum[tempdat$visitno == "pos"] <- 2
tempdat$daynum[tempdat$visitno == "Day 28"] <- 3
tempdat$daynum[tempdat$visitno == "Day 56"] <- 4
tempdat$daynum[tempdat$visitno == "Day 168"] <- 5
tempdat$logprop <- with(tempdat, log((count + 1)/parentcount + 10^-5))
control <- subset(tempdat, stim == "control")
stim <- subset(tempdat, stim == "PfRBC")
names(stim)[13] <- "stimprop"
names(control)[13] <- "controlprop"
tempdat <- merge(stim, control, by = c("ptid", "population", "visitno"))
ggplot(tempdat) + geom_point(aes(x = controlprop, y = stimprop, col = ptid)) +
geom_abline(intercept = 0, slope = 1) +
facet_grid(visitno ~ population)
ggplot(tempdat, aes(x = daynum.x, y = stimprop - controlprop, col = ptid)) +
geom_point() + geom_line() +
facet_wrap(~ population, scales = "free_y") +
geom_hline(yintercept = 0)
# Extract predicted values
times <- unique(tempdat$visitno)
ntimes <- length(times)
predlist <- list()
for(i in 1:length(fit)) {
pred <- data.frame(times = rep(times, 2),
type = c(rep("response", ntimes), rep("nonresponse", ntimes)))
coefs <- fit$coefficients[[i]]
# nonresponse
predictions <- rep(coefs[[1]], ntimes)
predictions <- predictions + c(0, coefs[c(6, 4, 5, 3)])
pred$eta[1:ntimes] <- predictions
# response
predictions <- predictions + coefs[c(2, 10, 8, 9, 7)]
pred$eta[(ntimes + 1):(ntimes * 2)] <- predictions
pred$prop <- 1 / (1 + exp(-pred$eta))
pred$population <- names(fit$coefficients)[i]
predlist[[i]] <- pred
}
predicted <- do.call("rbind", predlist)
ggplot(subset(predicted, population != "PD-1+/IFNg+")) +
geom_line(aes(x = as.numeric(times), y = log(prop), col = population, linetype = type))
j <- 6
ggplot(tempdat) + geom_point(aes(x = controlprop, y = stimprop, col = ptid)) +
geom_abline(intercept = 0, slope = 1) +
facet_grid(population ~ visitno)
ggplot(tempdat) + geom_point(aes(x = controlprop, y = stimprop, col = ptid)) +
geom_abline(intercept = 0, slope = 1) +
facet_grid(population ~ visitno, scales = "free_y")
