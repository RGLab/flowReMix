# remove <- names(remove)[which(sapply(remove, length) == 1)]
# cart <- subset(cart, !(id %in% remove))
# Data exploration ---------------------------
ggplot(subset(cart, dayfactor == "0",), aes(x = population, y = proportion, col = or_binary)) +
geom_boxplot() + geom_jitter()
#
# ggplot(cart) +
#   geom_line(aes(x = day, y = proportion, col = or_binary, linetype = id)) +
#   facet_wrap(~ population, ncol = 6, scales = "free_y")
correlations <- by(cart, list(cart$id, cart$dayfactor), function(x) cbind(x$proportion))
correlations <- correlations[sapply(correlations, length) == 27]
correlations <- t(do.call("cbind", correlations))
correlations <- cor(correlations)
diag(correlations) <- 0
populations <- unique(cart$population)
highcorr <- which(correlations > 0.85, arr.ind = TRUE)
highcorr <- t(apply(highcorr, 1, sort))
highcorr <- unique(highcorr)
cbind(populations[highcorr[, 1]], populations[highcorr[, 2]])
# Screening cell-subsets?
# Attempt to fit a model
outcome <- as.vector(by(cart, cart$id, function(x) x$or_binary[1]))
neurotox <- as.vector(by(cart, cart$id, function(x) x$neurotox[1]))
lymph <- as.vector(by(cart, cart$id, function(x) x$lymphodepletion[1]))
#cart <- subset(cart, dayfactor == "0")
cart$population <- factor(cart$population)
cart$treatment <- rep(1, nrow(cart))
system.time(fit <- subsetResponseMixtureRcpp(count ~  treatment + icu + disease,
sub.population = population,
N = parentcount, id =  id,
data = cart,
treatment = treatment,
randomAssignProb = 0,
weights = NULL,
updateLag = 5, nsamp = 50, maxIter = 10,
initMHcoef = 0.5,
covarianceMethod = "sparse",
isingMethod = "sparse",
regressionMethod = "sparse",
centerCovariance = FALSE,
dataReplicates = 10,
maxDispersion = 10^3))
require(pROC)
par(mfrow = c(4, 4))
subsets <- names(fit$posteriors)[-1]
pvals <- numeric(length(subsets))
for(i in 1:length(subsets)) {
rocfit <- roc(outcome ~ fit$posteriors[, i + 1])
auc <- rocfit$auc
n1 <- sum(outcome == 1)
n2 <- sum(outcome == 2)
Ustat <- auc * n1 * n2
pval <- min(1, 2 * (1 - pwilcox(Ustat, n1, n2)))
pvals[i] <- pval
plot(rocfit, main = paste(paste(subsets[i], " ", round(auc, 3), " ", round(pval, 3))))
}
qvals <- p.adjust(pvals, method = "BH")
names(qvals) <- subsets
categories <- list(activation = pvals[subsets %in% activation],
memory = pvals[subsets %in% memory],
tcells = pvals[subsets %in% tcell],
exhaustion = pvals[subsets %in% exhaustion])
categories <- lapply(categories, function(x) p.adjust(x, method = "BH"))
cart$population
unique(cart$population)
cart$tcellpop
unique(cart$tcellpop)
unique(cart$dayfactor)
cart <- subset(cart, dayfactor == "0")
cart
unique(cart$dayfactor)
unique(cart$tcellpop)
cart$subset <- as.factor(as.character(paste(cart$tcellpop, cart$population)))
cart$subset
cart$population <- factor(cart$population)
cart$treatment <- rep(1, nrow(cart))
cart <- subset(cart, dayfactor == "0")
cart$subset <- as.factor(as.character(paste(cart$tcellpop, cart$population)))
system.time(fit <- subsetResponseMixtureRcpp(count ~  treatment + icu + disease,
sub.population = population,
N = parentcount, id =  id,
data = cart,
treatment = treatment,
randomAssignProb = 0,
weights = NULL,
updateLag = 5, nsamp = 10, maxIter = 10,
initMHcoef = 0.5,
covarianceMethod = "sparse",
isingMethod = "sparse",
regressionMethod = "sparse",
centerCovariance = FALSE,
dataReplicates = 10,
maxDispersion = 10^3))
cart$population <- factor(cart$population)
cart$treatment <- rep(1, nrow(cart))
cart <- subset(cart, dayfactor == "0")
cart$subset <- as.factor(as.character(paste(cart$tcellpop, cart$population)))
system.time(fit <- subsetResponseMixtureRcpp(count ~  treatment + icu + disease,
sub.population = subset,
N = parentcount, id =  id,
data = cart,
treatment = treatment,
randomAssignProb = 0,
weights = NULL,
updateLag = 5, nsamp = 10, maxIter = 10,
initMHcoef = 0.5,
covarianceMethod = "sparse",
isingMethod = "sparse",
regressionMethod = "sparse",
centerCovariance = FALSE,
dataReplicates = 10,
maxDispersion = 10^3))
require(pROC)
par(mfrow = c(4, 4))
subsets <- names(fit$posteriors)[-1]
pvals <- numeric(length(subsets))
for(i in 1:length(subsets)) {
rocfit <- roc(outcome ~ fit$posteriors[, i + 1])
auc <- rocfit$auc
n1 <- sum(outcome == 1)
n2 <- sum(outcome == 2)
Ustat <- auc * n1 * n2
pval <- min(1, 2 * (1 - pwilcox(Ustat, n1, n2)))
pvals[i] <- pval
plot(rocfit, main = paste(paste(subsets[i], " ", round(auc, 3), " ", round(pval, 3))))
}
qvals <- p.adjust(pvals, method = "BH")
names(qvals) <- subsets
categories <- list(activation = pvals[subsets %in% activation],
memory = pvals[subsets %in% memory],
tcells = pvals[subsets %in% tcell],
exhaustion = pvals[subsets %in% exhaustion])
categories <- lapply(categories, function(x) p.adjust(x, method = "BH"))
categories
cart$population <- factor(cart$population)
cart$treatment <- rep(1, nrow(cart))
cart <- subset(cart, dayfactor == "0")
cart$subset <- as.factor(as.character(paste(cart$tcellpop, cart$population)))
system.time(fit <- subsetResponseMixtureRcpp(count ~  treatment + icu + disease,
sub.population = subset,
N = parentcount, id =  id,
data = cart,
treatment = treatment,
randomAssignProb = 0,
weights = NULL,
updateLag = 5, nsamp = 10, maxIter = 10,
initMHcoef = 0.5,
covarianceMethod = "sparse",
isingMethod = "sparse",
regressionMethod = "binom",
centerCovariance = FALSE,
dataReplicates = 10,
maxDispersion = 10^3))
cart$population <- factor(cart$population)
cart$treatment <- rep(1, nrow(cart))
cart <- subset(cart, dayfactor == "0")
cart$subset <- as.factor(as.character(paste(cart$tcellpop, cart$population)))
system.time(fit <- subsetResponseMixtureRcpp(count ~  treatment + icu + disease,
sub.population = subset,
N = parentcount, id =  id,
data = cart,
treatment = treatment,
randomAssignProb = 0,
weights = NULL,
updateLag = 5, nsamp = 20, maxIter = 10,
initMHcoef = 0.5,
covarianceMethod = "sparse",
isingMethod = "sparse",
regressionMethod = "binom",
centerCovariance = FALSE,
dataReplicates = 5,
maxDispersion = 10^3))
require(pROC)
par(mfrow = c(4, 4))
subsets <- names(fit$posteriors)[-1]
pvals <- numeric(length(subsets))
for(i in 1:length(subsets)) {
rocfit <- roc(outcome ~ fit$posteriors[, i + 1])
auc <- rocfit$auc
n1 <- sum(outcome == 1)
n2 <- sum(outcome == 2)
Ustat <- auc * n1 * n2
pval <- min(1, 2 * (1 - pwilcox(Ustat, n1, n2)))
pvals[i] <- pval
plot(rocfit, main = paste(paste(subsets[i], " ", round(auc, 3), " ", round(pval, 3))))
}
qvals <- p.adjust(pvals, method = "BH")
names(qvals) <- subsets
categories <- list(activation = pvals[subsets %in% activation],
memory = pvals[subsets %in% memory],
tcells = pvals[subsets %in% tcell],
exhaustion = pvals[subsets %in% exhaustion])
categories <- lapply(categories, function(x) p.adjust(x, method = "BH"))
cart$population <- factor(cart$population)
cart$treatment <- rep(1, nrow(cart))
cart <- subset(cart, dayfactor == "0")
cart$subset <- as.factor(as.character(paste(cart$tcellpop, cart$population)))
system.time(fit <- subsetResponseMixtureRcpp(count ~  treatment + icu + disease,
sub.population = subset,
N = parentcount, id =  id,
data = cart,
treatment = treatment,
randomAssignProb = 0,
weights = NULL,
updateLag = 5, nsamp = 20, maxIter = 10,
initMHcoef = 0.5,
covarianceMethod = "sparse",
isingMethod = "sparse",
regressionMethod = "binom",
centerCovariance = FALSE,
dataReplicates = 5,
maxDispersion = 10^3))
require(pROC)
par(mfrow = c(4, 4))
subsets <- names(fit$posteriors)[-1]
pvals <- numeric(length(subsets))
for(i in 1:length(subsets)) {
rocfit <- roc(outcome ~ fit$posteriors[, i + 1])
auc <- rocfit$auc
n1 <- sum(outcome == 1)
n2 <- sum(outcome == 2)
Ustat <- auc * n1 * n2
pval <- min(1, 2 * (1 - pwilcox(Ustat, n1, n2)))
pvals[i] <- pval
plot(rocfit, main = paste(paste(subsets[i], " ", round(auc, 3), " ", round(pval, 3))))
}
qvals <- p.adjust(pvals, method = "BH")
names(qvals) <- subsets
categories <- list(activation = pvals[subsets %in% activation],
memory = pvals[subsets %in% memory],
tcells = pvals[subsets %in% tcell],
exhaustion = pvals[subsets %in% exhaustion])
categories <- lapply(categories, function(x) p.adjust(x, method = "BH"))
par(mfrow = c(6, 5))
subsets <- names(fit$posteriors)[-1]
pvals <- numeric(length(subsets))
for(i in 1:length(subsets)) {
rocfit <- roc(outcome ~ fit$posteriors[, i + 1])
auc <- rocfit$auc
n1 <- sum(outcome == 1)
n2 <- sum(outcome == 2)
Ustat <- auc * n1 * n2
pval <- min(1, 2 * (1 - pwilcox(Ustat, n1, n2)))
pvals[i] <- pval
plot(rocfit, main = paste(paste(subsets[i], " ", round(auc, 3), " ", round(pval, 3))))
}
qvals <- p.adjust(pvals, method = "BH")
names(qvals) <- subsets
categories <- list(activation = pvals[subsets %in% activation],
memory = pvals[subsets %in% memory],
tcells = pvals[subsets %in% tcell],
exhaustion = pvals[subsets %in% exhaustion])
categories <- lapply(categories, function(x) p.adjust(x, method = "BH"))
par(mfrow = c(6, 5))
subsets <- names(fit$posteriors)[-1]
pvals <- numeric(length(subsets))
for(i in 1:length(subsets)) {
rocfit <- roc(outcome ~ fit$posteriors[, i + 1])
auc <- rocfit$auc
n1 <- sum(outcome == 1)
n2 <- sum(outcome == 2)
Ustat <- auc * n1 * n2
pval <- min(1, 2 * (1 - pwilcox(Ustat, n1, n2)))
pvals[i] <- pval
plot(rocfit, main = paste(paste(subsets[i], " ", round(auc, 3), " ", round(pval, 3))))
}
qvals <- p.adjust(pvals, method = "BH")
names(qvals) <- subsets
categories <- list(activation = pvals[subsets %in% activation],
memory = pvals[subsets %in% memory],
tcells = pvals[subsets %in% tcell],
exhaustion = pvals[subsets %in% exhaustion])
categories <- lapply(categories, function(x) p.adjust(x, method = "BH"))
par(mfrow = c(6, 5))
subsets <- names(fit$posteriors)[-1]
pvals <- numeric(length(subsets))
for(i in 1:length(subsets)) {
rocfit <- roc(outcome ~ fit$posteriors[, i + 1])
auc <- rocfit$auc
n1 <- sum(outcome == 1)
n2 <- sum(outcome == 2)
Ustat <- auc * n1 * n2
pval <- min(1, 2 * (1 - pwilcox(Ustat, n1, n2)))
pvals[i] <- pval
plot(rocfit, main = paste(paste(subsets[i], " ", round(auc, 3), " ", round(pval, 3))))
}
qvals <- p.adjust(pvals, method = "BH")
names(qvals) <- subsets
categories <- list(activation = pvals[subsets %in% activation],
memory = pvals[subsets %in% memory],
tcells = pvals[subsets %in% tcell],
exhaustion = pvals[subsets %in% exhaustion])
categories <- lapply(categories, function(x) p.adjust(x, method = "BH"))
par(mfrow = c(6, 5))
subsets <- names(fit$posteriors)[-1]
pvals <- numeric(length(subsets))
for(i in 1:length(subsets)) {
rocfit <- roc(outcome ~ fit$posteriors[, i + 1])
auc <- rocfit$auc
n1 <- sum(outcome == 1)
n2 <- sum(outcome == 2)
Ustat <- auc * n1 * n2
pval <- min(1, 2 * (1 - pwilcox(Ustat, n1, n2)))
pvals[i] <- pval
plot(rocfit, main = paste(paste(subsets[i], " ", round(auc, 3), " ", round(pval, 3))))
}
qvals <- p.adjust(pvals, method = "BH")
names(qvals) <- subsets
categories <- list(activation = pvals[subsets %in% activation],
memory = pvals[subsets %in% memory],
tcells = pvals[subsets %in% tcell],
exhaustion = pvals[subsets %in% exhaustion])
categories <- lapply(categories, function(x) p.adjust(x, method = "BH"))
par(mfrow = c(6, 5))
subsets <- names(fit$posteriors)[-1]
pvals <- numeric(length(subsets))
for(i in 1:length(subsets)) {
rocfit <- roc(outcome ~ fit$posteriors[, i + 1])
auc <- rocfit$auc
n1 <- sum(outcome == 1)
n2 <- sum(outcome == 2)
Ustat <- auc * n1 * n2
pval <- min(1, 2 * (1 - pwilcox(Ustat, n1, n2)))
pvals[i] <- pval
plot(rocfit, main = paste(paste(subsets[i], " ", round(auc, 3), " ", round(pval, 3))))
}
qvals <- p.adjust(pvals, method = "BH")
names(qvals) <- subsets
categories <- list(activation = pvals[subsets %in% activation],
memory = pvals[subsets %in% memory],
tcells = pvals[subsets %in% tcell],
exhaustion = pvals[subsets %in% exhaustion])
categories <- lapply(categories, function(x) p.adjust(x, method = "BH"))
par(mfrow = c(6, 5), mar = rep(1, 4))
subsets <- names(fit$posteriors)[-1]
pvals <- numeric(length(subsets))
for(i in 1:length(subsets)) {
rocfit <- roc(outcome ~ fit$posteriors[, i + 1])
auc <- rocfit$auc
n1 <- sum(outcome == 1)
n2 <- sum(outcome == 2)
Ustat <- auc * n1 * n2
pval <- min(1, 2 * (1 - pwilcox(Ustat, n1, n2)))
pvals[i] <- pval
plot(rocfit, main = paste(paste(subsets[i], " ", round(auc, 3), " ", round(pval, 3))))
}
qvals <- p.adjust(pvals, method = "BH")
names(qvals) <- subsets
categories <- list(activation = pvals[subsets %in% activation],
memory = pvals[subsets %in% memory],
tcells = pvals[subsets %in% tcell],
exhaustion = pvals[subsets %in% exhaustion])
categories <- lapply(categories, function(x) p.adjust(x, method = "BH"))
par(mfrow = c(6, 5), mar = rep(1, 4))
subsets <- names(fit$posteriors)[-1]
pvals <- numeric(length(subsets))
for(i in 1:length(subsets)) {
rocfit <- roc(outcome ~ fit$posteriors[, i + 1])
auc <- rocfit$auc
n1 <- sum(outcome == 1)
n2 <- sum(outcome == 2)
Ustat <- auc * n1 * n2
pval <- min(1, 2 * (1 - pwilcox(Ustat, n1, n2)))
pvals[i] <- pval
plot(rocfit, main = paste(paste(subsets[i], " ", round(auc, 3), " ", round(pval, 3))))
}
qvals <- p.adjust(pvals, method = "BH")
names(qvals) <- subsets
categories <- list(activation = pvals[subsets %in% activation],
memory = pvals[subsets %in% memory],
tcells = pvals[subsets %in% tcell],
exhaustion = pvals[subsets %in% exhaustion])
categories <- lapply(categories, function(x) p.adjust(x, method = "BH"))
par(mfrow = c(3, 5), mar = rep(1, 4))
subsets <- names(fit$posteriors)[-1]
pvals <- numeric(length(subsets))
for(i in 1:length(subsets)) {
rocfit <- roc(outcome ~ fit$posteriors[, i + 1])
auc <- rocfit$auc
n1 <- sum(outcome == 1)
n2 <- sum(outcome == 2)
Ustat <- auc * n1 * n2
pval <- min(1, 2 * (1 - pwilcox(Ustat, n1, n2)))
pvals[i] <- pval
plot(rocfit, main = paste(paste(subsets[i], " ", round(auc, 3), " ", round(pval, 3))))
}
qvals <- p.adjust(pvals, method = "BH")
names(qvals) <- subsets
categories <- list(activation = pvals[subsets %in% activation],
memory = pvals[subsets %in% memory],
tcells = pvals[subsets %in% tcell],
exhaustion = pvals[subsets %in% exhaustion])
categories <- lapply(categories, function(x) p.adjust(x, method = "BH"))
system.time(fit <- subsetResponseMixtureRcpp(count ~  treatment + icu + disease,
sub.population = subset,
N = parentcount, id =  id,
data = cart,
treatment = treatment,
randomAssignProb = 0,
weights = NULL,
updateLag = 5, nsamp = 20, maxIter = 10,
initMHcoef = 0.5,
covarianceMethod = "sparse",
isingMethod = "sparse",
regressionMethod = "sparse",
centerCovariance = FALSE,
dataReplicates = 5,
maxDispersion = 10^3))
require(pROC)
par(mfrow = c(3, 5), mar = rep(1, 4))
subsets <- names(fit$posteriors)[-1]
pvals <- numeric(length(subsets))
for(i in 1:length(subsets)) {
rocfit <- roc(outcome ~ fit$posteriors[, i + 1])
auc <- rocfit$auc
n1 <- sum(outcome == 1)
n2 <- sum(outcome == 2)
Ustat <- auc * n1 * n2
pval <- min(1, 2 * (1 - pwilcox(Ustat, n1, n2)))
pvals[i] <- pval
plot(rocfit, main = paste(paste(subsets[i], " ", round(auc, 3), " ", round(pval, 3))))
}
qvals <- p.adjust(pvals, method = "BH")
names(qvals) <- subsets
categories <- list(activation = pvals[subsets %in% activation],
memory = pvals[subsets %in% memory],
tcells = pvals[subsets %in% tcell],
exhaustion = pvals[subsets %in% exhaustion])
categories <- lapply(categories, function(x) p.adjust(x, method = "BH"))
cart$population <- factor(cart$population)
cart$treatment <- rep(1, nrow(cart))
cart <- subset(cart, dayfactor == "0")
cart$subset <- as.factor(as.character(paste(cart$tcellpop, cart$population)))
system.time(fit <- subsetResponseMixtureRcpp(count ~  treatment + icux,
sub.population = subset,
N = parentcount, id =  id,
data = cart,
treatment = treatment,
randomAssignProb = 0,
weights = NULL,
updateLag = 5, nsamp = 20, maxIter = 10,
initMHcoef = 0.5,
covarianceMethod = "sparse",
isingMethod = "sparse",
regressionMethod = "binom",
centerCovariance = FALSE,
dataReplicates = 5,
maxDispersion = 10^3))
require(pROC)
par(mfrow = c(3, 5), mar = rep(1, 4))
subsets <- names(fit$posteriors)[-1]
pvals <- numeric(length(subsets))
for(i in 1:length(subsets)) {
rocfit <- roc(outcome ~ fit$posteriors[, i + 1])
auc <- rocfit$auc
n1 <- sum(outcome == 1)
n2 <- sum(outcome == 2)
Ustat <- auc * n1 * n2
pval <- min(1, 2 * (1 - pwilcox(Ustat, n1, n2)))
pvals[i] <- pval
plot(rocfit, main = paste(paste(subsets[i], " ", round(auc, 3), " ", round(pval, 3))))
}
qvals <- p.adjust(pvals, method = "BH")
names(qvals) <- subsets
categories <- list(activation = pvals[subsets %in% activation],
memory = pvals[subsets %in% memory],
tcells = pvals[subsets %in% tcell],
exhaustion = pvals[subsets %in% exhaustion])
categories <- lapply(categories, function(x) p.adjust(x, method = "BH"))
cart$population <- factor(cart$population)
cart$treatment <- rep(1, nrow(cart))
cart <- subset(cart, dayfactor == "0")
cart$subset <- as.factor(as.character(paste(cart$tcellpop, cart$population)))
system.time(fit <- subsetResponseMixtureRcpp(count ~  treatment + icu,
sub.population = subset,
N = parentcount, id =  id,
data = cart,
treatment = treatment,
randomAssignProb = 0,
weights = NULL,
updateLag = 5, nsamp = 20, maxIter = 10,
initMHcoef = 0.5,
covarianceMethod = "sparse",
isingMethod = "sparse",
regressionMethod = "binom",
centerCovariance = FALSE,
dataReplicates = 5,
maxDispersion = 10^3))
require(pROC)
par(mfrow = c(3, 5), mar = rep(1, 4))
subsets <- names(fit$posteriors)[-1]
pvals <- numeric(length(subsets))
for(i in 1:length(subsets)) {
rocfit <- roc(outcome ~ fit$posteriors[, i + 1])
auc <- rocfit$auc
n1 <- sum(outcome == 1)
n2 <- sum(outcome == 2)
Ustat <- auc * n1 * n2
pval <- min(1, 2 * (1 - pwilcox(Ustat, n1, n2)))
pvals[i] <- pval
plot(rocfit, main = paste(paste(subsets[i], " ", round(auc, 3), " ", round(pval, 3))))
}
qvals <- p.adjust(pvals, method = "BH")
names(qvals) <- subsets
categories <- list(activation = pvals[subsets %in% activation],
memory = pvals[subsets %in% memory],
tcells = pvals[subsets %in% tcell],
exhaustion = pvals[subsets %in% exhaustion])
categories <- lapply(categories, function(x) p.adjust(x, method = "BH"))
posteriors
posteriors <- fit$posteriors
apply(posteriors[, -1], 2, var)
