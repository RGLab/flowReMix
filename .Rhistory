fitList <- list()
for(j in 1:length(parents)) {
i <- j
tempdat <- subset(malaria, parent == parents[j])
if(i == 1) {
tempdat <- subset(tempdat, population != "4+/GzB+")
}
tempdat$treatment <- factor(as.numeric(tempdat$stim == "PfRBC"))
tempdat <- subset(tempdat, visitno != "pos")
system.time(fit <- subsetResponseMixtureRcpp(count ~  treatment * visitno,
sub.population = factor(tempdat$population),
N = parentcount, id =  ptid,
data = tempdat,
treatment = treatment,
updateLag = 5,
nsamp = 40, maxIter = 15,
initMHcoef = 1,
randomAssignProb = 0.1,
covarianceMethod = "sparse",
sparseGraph = TRUE,
centerCovariance = FALSE))
fitList$j <- fit
}
covariance <- PDSCE::pdsoft.cv(estimatedRandomEffects, init = "diag", nsplits = 2)
estimatedRandomEffects
tempdat <- subset(malaria, parent == parents[j])
unique(tempdat$population)
parents <- parents[parents %in% unique(malaria$parent)]
fitList <- list()
for(j in 1:length(parents)) {
i <- j
tempdat <- subset(malaria, parent == parents[j])
if(i == 1) {
tempdat <- subset(tempdat, population != "4+/CM")
}
tempdat$treatment <- factor(as.numeric(tempdat$stim == "PfRBC"))
tempdat <- subset(tempdat, visitno != "pos")
system.time(fit <- subsetResponseMixtureRcpp(count ~  treatment * visitno,
sub.population = factor(tempdat$population),
N = parentcount, id =  ptid,
data = tempdat,
treatment = treatment,
updateLag = 5,
nsamp = 40, maxIter = 15,
initMHcoef = 1,
randomAssignProb = 0.1,
covarianceMethod = "sparse",
sparseGraph = TRUE,
centerCovariance = FALSE))
fitList$j <- fit
}
estimatedRandomEffects
parents <- parents[parents %in% unique(malaria$parent)]
fitList <- list()
for(j in 1:length(parents)) {
i <- j
tempdat <- subset(malaria, parent == parents[j])
tempdat <- tempdat[order(tempdat$ptid, tempdat$population, tempdat$stim), ]
# if(i == 1) {
#   tempdat <- subset(tempdat, population != "4+/CM")
# }
tempdat$treatment <- factor(as.numeric(tempdat$stim == "PfRBC"))
tempdat <- subset(tempdat, visitno != "pos")
system.time(fit <- subsetResponseMixtureRcpp(count ~  treatment * visitno,
sub.population = factor(tempdat$population),
N = parentcount, id =  ptid,
data = tempdat,
treatment = treatment,
updateLag = 5,
nsamp = 40, maxIter = 15,
initMHcoef = 1,
randomAssignProb = 0.1,
covarianceMethod = "sparse",
sparseGraph = TRUE,
centerCovariance = FALSE))
fitList$j <- fit
}
parents <- parents[parents %in% unique(malaria$parent)]
fitList <- list()
for(j in 1:length(parents)) {
i <- j
tempdat <- subset(malaria, parent == parents[j])
tempdat <- tempdat[order(tempdat$ptid, tempdat$population, tempdat$stim), ]
# if(i == 1) {
#   tempdat <- subset(tempdat, population != "4+/CM")
# }
tempdat$treatment <- factor(as.numeric(tempdat$stim == "PfRBC"))
tempdat <- subset(tempdat, visitno != "pos")
system.time(fit <- subsetResponseMixtureRcpp(count ~  treatment * visitno,
sub.population = factor(tempdat$population),
N = parentcount, id =  ptid,
data = tempdat,
treatment = treatment,
updateLag = 5,
nsamp = 40, maxIter = 15,
initMHcoef = 1,
randomAssignProb = 0.1,
covarianceMethod = "sparse",
sparseGraph = TRUE,
centerCovariance = FALSE))
fitList$j <- fit
}
estimatedRandomEffects
unique(dat$sub.population)
parents <- parents[parents %in% unique(malaria$parent)]
fitList <- list()
for(j in 1:length(parents)) {
i <- j
tempdat <- subset(malaria, parent == parents[j])
tempdat <- tempdat[order(tempdat$ptid, tempdat$population, tempdat$stim), ]
if(i == 1) {
tempdat <- subset(tempdat, population != "4+/IL4+")
}
tempdat$treatment <- factor(as.numeric(tempdat$stim == "PfRBC"))
tempdat <- subset(tempdat, visitno != "pos")
system.time(fit <- subsetResponseMixtureRcpp(count ~  treatment * visitno,
sub.population = factor(tempdat$population),
N = parentcount, id =  ptid,
data = tempdat,
treatment = treatment,
updateLag = 5,
nsamp = 40, maxIter = 15,
initMHcoef = 1,
randomAssignProb = 0.1,
covarianceMethod = "sparse",
sparseGraph = TRUE,
centerCovariance = FALSE))
fitList$j <- fit
}
j
i <- j
tempdat <- subset(malaria, parent == parents[j])
tempdat <- tempdat[order(tempdat$ptid, tempdat$population, tempdat$stim), ]
if(i == 1) {
tempdat <- subset(tempdat, population != "4+/IL4+")
}
tempdat$treatment <- factor(as.numeric(tempdat$stim == "PfRBC"))
tempdat <- subset(tempdat, visitno != "pos")
system.time(fit <- subsetResponseMixtureRcpp(count ~  treatment * visitno,
sub.population = factor(tempdat$population),
N = parentcount, id =  ptid,
data = tempdat,
treatment = treatment,
updateLag = 5,
nsamp = 40, maxIter = 15,
initMHcoef = 1,
randomAssignProb = 0.1,
covarianceMethod = "sparse",
sparseGraph = TRUE,
centerCovariance = FALSE))
fitList$j <- fit
estimatedRandomEffects
unique(dat$sub.population)
for(j in 3:length(parents)) {
i <- j
tempdat <- subset(malaria, parent == parents[j])
tempdat <- tempdat[order(tempdat$ptid, tempdat$population, tempdat$stim), ]
if(i == 1) {
tempdat <- subset(tempdat, population != "4+/IL4+")
} else if(i == 3) {
tempdat <- subset(tempdat, population != "PD-1+/IL21+")
}
tempdat$treatment <- factor(as.numeric(tempdat$stim == "PfRBC"))
tempdat <- subset(tempdat, visitno != "pos")
system.time(fit <- subsetResponseMixtureRcpp(count ~  treatment * visitno,
sub.population = factor(tempdat$population),
N = parentcount, id =  ptid,
data = tempdat,
treatment = treatment,
updateLag = 5,
nsamp = 40, maxIter = 15,
initMHcoef = 1,
randomAssignProb = 0.1,
covarianceMethod = "sparse",
sparseGraph = TRUE,
centerCovariance = FALSE))
fitList$j <- fit
}
for(j in 3:length(parents)) {
i <- j
tempdat <- subset(malaria, parent == parents[j])
tempdat <- tempdat[order(tempdat$ptid, tempdat$population, tempdat$stim), ]
if(i == 1) {
tempdat <- subset(tempdat, population != "4+/IL4+")
} else if(i == 3) {
tempdat <- subset(tempdat, population != "PD-1+/IL21+")
}
tempdat$treatment <- factor(as.numeric(tempdat$stim == "PfRBC"))
tempdat <- subset(tempdat, visitno != "pos")
system.time(fit <- subsetResponseMixtureRcpp(count ~  treatment * visitno,
sub.population = factor(tempdat$population),
N = parentcount, id =  ptid,
data = tempdat,
treatment = treatment,
updateLag = 5,
nsamp = 40, maxIter = 15,
initMHcoef = 1,
randomAssignProb = 0.1,
covarianceMethod = "sparse",
sparseGraph = TRUE,
centerCovariance = FALSE))
fitList$j <- fit
}
warnings()
for(j in 3:length(parents)) {
i <- j
tempdat <- subset(malaria, parent == parents[j])
tempdat <- tempdat[order(tempdat$ptid, tempdat$population, tempdat$stim), ]
if(i == 1) {
tempdat <- subset(tempdat, population != "4+/IL4+")
} else if(i == 3) {
tempdat <- subset(tempdat, population != "PD-1+/IL21+")
next
}
tempdat$treatment <- factor(as.numeric(tempdat$stim == "PfRBC"))
tempdat <- subset(tempdat, visitno != "pos")
system.time(fit <- subsetResponseMixtureRcpp(count ~  treatment * visitno,
sub.population = factor(tempdat$population),
N = parentcount, id =  ptid,
data = tempdat,
treatment = treatment,
updateLag = 5,
nsamp = 40, maxIter = 15,
initMHcoef = 1,
randomAssignProb = 0.1,
covarianceMethod = "sparse",
sparseGraph = TRUE,
centerCovariance = FALSE))
fitList$j <- fit
}
j
for(j in 3:length(parents)) {
i <- j
tempdat <- subset(malaria, parent == parents[j])
tempdat <- tempdat[order(tempdat$ptid, tempdat$population, tempdat$stim), ]
if(i == 1) {
tempdat <- subset(tempdat, population != "4+/IL4+")
} else if(i == 3) {
tempdat <- subset(tempdat, population != "PD-1+/IL21+")
next
} else if(i == 4) {
next
}
tempdat$treatment <- factor(as.numeric(tempdat$stim == "PfRBC"))
tempdat <- subset(tempdat, visitno != "pos")
system.time(fit <- subsetResponseMixtureRcpp(count ~  treatment * visitno,
sub.population = factor(tempdat$population),
N = parentcount, id =  ptid,
data = tempdat,
treatment = treatment,
updateLag = 5,
nsamp = 40, maxIter = 15,
initMHcoef = 1,
randomAssignProb = 0.1,
covarianceMethod = "sparse",
sparseGraph = TRUE,
centerCovariance = FALSE))
fitList$j <- fit
}
j
fitList[[1]]
fitList[[2]]
fitList
fitList[[j]] <- fit
fitList
system.time(fit <- subsetResponseMixtureRcpp(count ~  treatment * visitno,
sub.population = factor(tempdat$population),
N = parentcount, id =  ptid,
data = tempdat,
treatment = treatment,
updateLag = 5,
nsamp = 40, maxIter = 15,
initMHcoef = 1,
randomAssignProb = 0.1,
covarianceMethod = "sparse",
sparseGraph = TRUE,
centerCovariance = FALSE))
estimatedRandomEffects
estimatedRandomEffects
unique(dat$sub.population)
parents <- parents[parents %in% unique(malaria$parent)]
fitList <- list()
for(j in 1:length(parents)) {
i <- j
tempdat <- subset(malaria, parent == parents[j])
tempdat <- tempdat[order(tempdat$ptid, tempdat$population, tempdat$stim), ]
if(i == 1) {
tempdat <- subset(tempdat, population != "4+/IL4+")
} else if(i == 3) {
tempdat <- subset(tempdat, population != "PD-1+/IL21+")
next
} else if(i == 4) {
next
} else if(i == 6) {
tempdat <- subset(tempdat, population != "8+/CXCR5+/TNFa+")
}
tempdat$treatment <- factor(as.numeric(tempdat$stim == "PfRBC"))
tempdat <- subset(tempdat, visitno != "pos")
system.time(fit <- subsetResponseMixtureRcpp(count ~  treatment * visitno,
sub.population = factor(tempdat$population),
N = parentcount, id =  ptid,
data = tempdat,
treatment = treatment,
updateLag = 5,
nsamp = 40, maxIter = 15,
initMHcoef = 1,
randomAssignProb = 0.1,
covarianceMethod = "sparse",
sparseGraph = TRUE,
centerCovariance = FALSE))
fitList[[j]] <- fit
}
j
for(j in 6:length(parents)) {
i <- j
tempdat <- subset(malaria, parent == parents[j])
tempdat <- tempdat[order(tempdat$ptid, tempdat$population, tempdat$stim), ]
if(i == 1) {
tempdat <- subset(tempdat, population != "4+/IL4+")
} else if(i == 3) {
tempdat <- subset(tempdat, population != "PD-1+/IL21+")
next
} else if(i == 4) {
next
} else if(i == 6) {
tempdat <- subset(tempdat, population != "8+/CXCR5+/TNFa+")
next
}
tempdat$treatment <- factor(as.numeric(tempdat$stim == "PfRBC"))
tempdat <- subset(tempdat, visitno != "pos")
system.time(fit <- subsetResponseMixtureRcpp(count ~  treatment * visitno,
sub.population = factor(tempdat$population),
N = parentcount, id =  ptid,
data = tempdat,
treatment = treatment,
updateLag = 5,
nsamp = 40, maxIter = 15,
initMHcoef = 1,
randomAssignProb = 0.1,
covarianceMethod = "sparse",
sparseGraph = TRUE,
centerCovariance = FALSE))
fitList[[j]] <- fit
}
j
length(parents)
for(j in 6:length(parents)) {
i <- j
tempdat <- subset(malaria, parent == parents[j])
tempdat <- tempdat[order(tempdat$ptid, tempdat$population, tempdat$stim), ]
if(i == 1) {
tempdat <- subset(tempdat, population != "4+/IL4+")
} else if(i == 3) {
tempdat <- subset(tempdat, population != "PD-1+/IL21+")
next
} else if(i == 4) {
next
} else if(i == 6) {
tempdat <- subset(tempdat, population != "8+/CXCR5+/TNFa+")
next
} else if(i == 7) {
next
}
tempdat$treatment <- factor(as.numeric(tempdat$stim == "PfRBC"))
tempdat <- subset(tempdat, visitno != "pos")
system.time(fit <- subsetResponseMixtureRcpp(count ~  treatment * visitno,
sub.population = factor(tempdat$population),
N = parentcount, id =  ptid,
data = tempdat,
treatment = treatment,
updateLag = 5,
nsamp = 40, maxIter = 15,
initMHcoef = 1,
randomAssignProb = 0.1,
covarianceMethod = "sparse",
sparseGraph = TRUE,
centerCovariance = FALSE))
fitList[[j]] <- fit
}
j
for(j in 6:length(parents)) {
i <- j
tempdat <- subset(malaria, parent == parents[j])
tempdat <- tempdat[order(tempdat$ptid, tempdat$population, tempdat$stim), ]
if(i == 1) {
tempdat <- subset(tempdat, population != "4+/IL4+")
} else if(i == 3) {
tempdat <- subset(tempdat, population != "PD-1+/IL21+")
next
} else if(i == 4) {
next
} else if(i == 6) {
tempdat <- subset(tempdat, population != "8+/CXCR5+/TNFa+")
next
} else if(i == 7) {
next
} else if(j == 9) {
next
}
tempdat$treatment <- factor(as.numeric(tempdat$stim == "PfRBC"))
tempdat <- subset(tempdat, visitno != "pos")
system.time(fit <- subsetResponseMixtureRcpp(count ~  treatment * visitno,
sub.population = factor(tempdat$population),
N = parentcount, id =  ptid,
data = tempdat,
treatment = treatment,
updateLag = 5,
nsamp = 40, maxIter = 15,
initMHcoef = 1,
randomAssignProb = 0.1,
covarianceMethod = "sparse",
sparseGraph = TRUE,
centerCovariance = FALSE))
fitList[[j]] <- fit
}
for(j in 9:length(parents)) {
i <- j
tempdat <- subset(malaria, parent == parents[j])
tempdat <- tempdat[order(tempdat$ptid, tempdat$population, tempdat$stim), ]
if(i == 1) {
tempdat <- subset(tempdat, population != "4+/IL4+")
} else if(i == 3) {
tempdat <- subset(tempdat, population != "PD-1+/IL21+")
next
} else if(i == 4) {
next
} else if(i == 6) {
tempdat <- subset(tempdat, population != "8+/CXCR5+/TNFa+")
next
} else if(i == 7) {
next
} else if(j == 9) {
next
}
tempdat$treatment <- factor(as.numeric(tempdat$stim == "PfRBC"))
tempdat <- subset(tempdat, visitno != "pos")
system.time(fit <- subsetResponseMixtureRcpp(count ~  treatment * visitno,
sub.population = factor(tempdat$population),
N = parentcount, id =  ptid,
data = tempdat,
treatment = treatment,
updateLag = 5,
nsamp = 40, maxIter = 15,
initMHcoef = 1,
randomAssignProb = 0.1,
covarianceMethod = "sparse",
sparseGraph = TRUE,
centerCovariance = FALSE))
fitList[[j]] <- fit
}
j
for(j in 11:length(parents)) {
i <- j
tempdat <- subset(malaria, parent == parents[j])
tempdat <- tempdat[order(tempdat$ptid, tempdat$population, tempdat$stim), ]
if(i == 1) {
tempdat <- subset(tempdat, population != "4+/IL4+")
} else if(i == 3) {
tempdat <- subset(tempdat, population != "PD-1+/IL21+")
next
} else if(i == 4) {
next
} else if(i == 6) {
tempdat <- subset(tempdat, population != "8+/CXCR5+/TNFa+")
next
} else if(i == 7) {
next
} else if(j == 9) {
next
} else if(j == 10) {
next
}
tempdat$treatment <- factor(as.numeric(tempdat$stim == "PfRBC"))
tempdat <- subset(tempdat, visitno != "pos")
system.time(fit <- subsetResponseMixtureRcpp(count ~  treatment * visitno,
sub.population = factor(tempdat$population),
N = parentcount, id =  ptid,
data = tempdat,
treatment = treatment,
updateLag = 5,
nsamp = 40, maxIter = 15,
initMHcoef = 1,
randomAssignProb = 0.1,
covarianceMethod = "sparse",
sparseGraph = TRUE,
centerCovariance = FALSE))
fitList[[j]] <- fit
}
f9t
f9t
length(fitlist)
length(fitList)
fitList
par(mfrow = c(2, 3))
par(mfrow = c(2, 3), mar = rep(1, 4))
for(i in 1:length(fitList)) {
if(!is.null(fitList[[i]])){
plot(fitList[[i]]$isingfit)
}
}
par(mfrow = c(2, 3), mar = rep(1, 4))
for(i in 1:length(fitList)) {
if(!is.null(fitList[[i]])){
plot(fitList[[i]]$isingfit)
}
}
par(mfrow = c(2, 3), mar = rep(3, 4))
for(i in 1:length(fitList)) {
if(!is.null(fitList[[i]])){
plot(fitList[[i]]$isingfit)
}
}
