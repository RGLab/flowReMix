empFDR <- sapply(uniquePost, function(x) 1 - mean(vaccine[post <= x]))
power <- sapply(uniquePost, function(x) sum(vaccine[post <= x]) / sum(vaccine))
print(plot(nominalFDR, empFDR, type = "l", xlim = c(0, 1), ylim = c(0, 1), col = "red",
main = paste(i, "- AUC ", round(auc[i], 2))))
lines(nominalFDR, power, col = "blue", lty = 2)
abline(a = 0, b = 1)
abline(v = c(0.05, 0.1), h = c(0.8, 0.9), col = "grey")
}
forplot <- list()
for(j in 1:length(subsetIndex)) {
i <- subsetIndex[j]
post <- posteriors[, i]
negprop <- log(booldata$count / booldata$parentcount)[booldata$Subset == subsets[i] & booldata$stim == "nonstim"]
envprop <- log(booldata$count / booldata$parentcount)[booldata$Subset == subsets[i] & booldata$stim == "stim"]
forplot[[i]] <- data.frame(subset = subsets[i],
negprop = negprop, envprop = envprop,
posterior = 1 - post, vaccine = vaccine)
}
forplot <- do.call("rbind", forplot[c(1:21, 23)])
require(ggplot2)
print(ggplot(forplot) +
geom_point(aes(x = negprop, y = envprop, col = posterior, shape = vaccine == 1)) +
facet_wrap(~ subset, scales = 'free', ncol = 6) +
geom_abline(slope = 1, intercept = 0) +
theme_bw() + scale_colour_gradientn(colours=rainbow(4)))
library(gridExtra)
table <- data.frame(index = 1:length(subsets), subset = subsets,
responseProb = round(fit$levelProbs, 2),
AUC = round(auc, 2))
pdf("figures/cell subset table B.pdf", height = 8, width = 6)
grid.table(table, rows = NULL)
dev.off()
par(mfrow = c(1, 1))
plot(fit$isingfit)
# Plotting network -----------------------
require(GGally)
library(network)
library(sna)
network <- fit$isingfit$weiadj
nodes <- ggnet2(network(net))$data
edges <- matrix(nrow = sum(network != 0)/2, ncol = 5)
p <- nrow(network)
row <- 1
for(j in 2:p) {
for(i in 1:(j-1)) {
if(network[i, j] != 0) {
edges[row, ] <- unlist(c(nodes[i, 6:7], nodes[j, 6:7], network[i, j]))
row <- row + 1
}
}
}
edges <- data.frame(edges)
names(edges) <- c("xstart", "ystart", "xend", "yend", "width")
edges$width <- with(edges, abs(width) / max(abs(width)) * sign(width))
nodes$probs <- fit$levelProbs
coefficients <- sapply(fit$coefficients, function(x) x[2])
for(i in 1:nrow(nodes)) {
if(coefficients[i] < 0) {
nodes$probs[i] <- 1 - nodes$probs[i]
}
}
nodes$auc <- auc
nodes$mFunctional <- 1:nrow(nodes) >= 6
names(edges)[5] <- "Dependence"
ggplot() +
scale_colour_gradient(limits=c(0, 1), low="white", high = "black") +
geom_segment(data = edges, aes(x = xstart, y = ystart,
xend = xend, yend = yend,
alpha = Dependence,
col = Dependence),
size = 1) +
scale_fill_gradientn(colours=rainbow(4)) +
geom_point(data = nodes[1:5, ], aes(x = x, y = y, fill = auc), shape = 25,
size = 8, col = "white") +
geom_point(data = nodes[6:23, ], aes(x = x, y = y, fill = auc), shape = 21,
size = 8, col = "white") +
scale_size(range = c(0.3, 1)) +
scale_shape(solid = FALSE) +
geom_text(data = nodes, aes(x = x, y = y, label = 1:23)) +
theme(axis.line=element_blank(),axis.text.x=element_blank(),
axis.text.y=element_blank(),axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
panel.background=element_blank(),panel.border=element_blank(),panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),plot.background=element_blank())
# Subject level posterior aggeregate?
posteriors <- fit$posteriors[, -1]
posteriors <- 1 - posteriors
weights <- apply(posteriors, 2, var)
weights <- weights / sum(weights)
aggregate <- as.vector(posteriors %*% weights)
rocfit <- roc(vaccine ~ aggregate)
plot(pROC::roc(vaccine ~ aggregate), main = paste("AUC -", round(rocfit$auc, 3)))
require(pROC)
posteriors <- fit$posteriors[, 2:ncol(fit$posteriors), drop = FALSE]
par(mfrow = c(4, 6), mar = rep(1, 4))
#par(mfrow = c(3, 3), mar = rep(1, 4))
auc <- numeric(length(subsets))
for(j in 1:length((subsetIndex))) {
i <- subsetIndex[j]
try(rocfit <- roc(!vaccine ~ posteriors[, i]))
try(rocfit <- roc(vaccine ~ posteriors[, i]))
auc[i] <- rocfit$auc
print(plot(rocfit, main = paste(i, "- AUC", round(rocfit$auc, 3))))
}
posteriros
posteriros
posteriors
vaccine <- as.vector(by(booldata, INDICES = booldata$ptid, FUN = function(x) x$vaccine[1] == "VACCINE"))
posteriors <- fit$posteriors
posteriors$id <- as.numeric(as.character(posteriors$id))
posteriors <- posteriors[order(posteriors$id), -1]
par(mfrow = c(2, 3), mar = rep(3, 4))
for(i in 1:length(selected_populations)) {
rocfit <- roc(vaccine ~ posteriors[, i])
print(plot(rocfit, main = paste(leaves[selected_populations[i]], "- AUC", round(rocfit$auc, 3))))
}
vaccine <- as.vector(by(booldata, INDICES = booldata$ptid, FUN = function(x) x$vaccine[1] == "VACCINE"))
vaccine <- as.vector(by(booldata, INDICES = booldata$ptid, FUN = function(x) x$vaccine[1] == "VACCINE"))
vaccine <- as.vector(by(booldata, INDICES = booldata$ptid, FUN = function(x) x$vaccine[1] == "VACCINE"))
fit
booldata$vaccine
vaccine <- as.vector(by(booldata, INDICES = booldata$ptid, FUN = function(x) x$vaccine[1] == "VACCINE"))
vaccine <- as.vector(by(booldata, INDICES = booldata$PTID, FUN = function(x) x$vaccine[1] == "VACCINE"))
posteriors <- fit$posteriors
posteriors$id <- as.numeric(as.character(posteriors$id))
posteriors$id
posteriors <- fit$posteriors
posteriors$id
posteriors <- fit$posteriors
posteriors <- posteriors[order(posteriors$id), -1]
par(mfrow = c(2, 3), mar = rep(3, 4))
for(i in 1:length(selected_populations)) {
rocfit <- roc(vaccine ~ posteriors[, i])
print(plot(rocfit, main = paste(leaves[selected_populations[i]], "- AUC", round(rocfit$auc, 3))))
}
posteriors
posteriors$`TNFa&IFNg&IL4&IL2&CD154&!IL17a`
posteriors$id
posteriors <- fit$posteriors
posteriors$id
vaccine
unique(booldata$PTID)
(by(booldata, INDICES = booldata$PTID, FUN = function(x) x$vaccine[1] == "VACCINE"))
as.vector
vaccine <- as.vector(by(booldata, INDICES = booldata$PTID, FUN = function(x) x$vaccine[1] == "VACCINE"))
posteriors <- fit$posteriors
vaccine <- as.vector(by(booldata, INDICES = booldata$PTID, FUN = function(x) x$vaccine[1] == "VACCINE"))
posteriors <- fit$posteriors
par(mfrow = c(4, 6), mar = rep(1, 4))
for(i in 1:length(selected_populations)) {
rocfit <- roc(vaccine ~ posteriors[, i])
print(plot(rocfit, main = paste(leaves[selected_populations[i]], "- AUC", round(rocfit$auc, 3))))
}
dim(posteriors)
selected_populations
vaccine <- as.vector(by(booldata, INDICES = booldata$PTID, FUN = function(x) x$vaccine[1] == "VACCINE"))
posteriors <- fit$posteriors
par(mfrow = c(4, 6), mar = rep(1, 4))
for(i in 1:length(subsets)) {
rocfit <- roc(vaccine ~ posteriors[, i])
print(plot(rocfit, main = paste(leaves[subsets[i]], "- AUC", round(rocfit$auc, 3))))
}
vaccine
rocfit <- roc(vaccine ~ posteriors[, i])
posteriors[, i]
vaccine <- as.vector(by(booldata, INDICES = booldata$PTID, FUN = function(x) x$vaccine[1] == "VACCINE"))
posteriors <- fit$posteriors[, -1]
par(mfrow = c(4, 6), mar = rep(1, 4))
for(i in 1:length(subsets)) {
rocfit <- roc(vaccine ~ posteriors[, i])
print(plot(rocfit, main = paste(leaves[subsets[i]], "- AUC", round(rocfit$auc, 3))))
}
vaccine <- as.vector(by(booldata, INDICES = booldata$PTID, FUN = function(x) x$vaccine[1] == "VACCINE"))
posteriors <- fit$posteriors[, -1]
par(mfrow = c(4, 6), mar = rep(1, 4))
for(i in 1:length(subsets)) {
rocfit <- roc(vaccine ~ posteriors[, i])
print(plot(rocfit, main = paste(subsets[i], "- AUC", round(rocfit$auc, 3))))
}
vaccine <- as.vector(by(booldata, INDICES = booldata$PTID, FUN = function(x) x$vaccine[1] == "VACCINE"))
posteriors <- fit$posteriors[, -1]
par(mfrow = c(4, 6), mar = rep(1, 4))
for(i in 1:length(subsets)) {
rocfit <- roc(vaccine ~ posteriors[, i])
print(plot(rocfit, main = paste(i, "- AUC", round(rocfit$auc, 3))))
}
rocfit <- roc(vaccine ~ posteriors[, i])
rocfit
require(pROC)
rocfit <- roc(vaccine ~ posteriors[, i])
summary(rocfit)
vaccine <- as.vector(by(booldata, INDICES = booldata$PTID, FUN = function(x) x$vaccine[1] == "VACCINE"))
posteriors <- fit$posteriors[, -1]
par(mfrow = c(4, 6), mar = rep(1, 4))
for(i in 1:length(subsets)) {
rocfit <- roc(vaccine ~ posteriors[, i])
print(plot(rocfit, main = paste(i, "- AUC", round(rocfit$auc, 3))))
}
vaccine
posteriors[, i]
i <- 3
i <- 5
rocfit <- roc(vaccine ~ posteriors[, i])
rocfit
summary(rocfit)
plot(rocfit)
plot(rocfit)
rocfit$auc
fit$posteriors
rocfit <- roc(vaccine ~ 1 - posteriors[, i])
vaccine <- as.vector(by(booldata, INDICES = booldata$PTID, FUN = function(x) x$vaccine[1] == "VACCINE"))
posteriors <- 1 - fit$posteriors[, -1]
par(mfrow = c(4, 6), mar = rep(1, 4))
for(i in 1:length(subsets)) {
rocfit <- roc(vaccine ~ 1 - posteriors[, i])
print(plot(rocfit, main = paste(i, "- AUC", round(rocfit$auc, 3))))
}
vaccine <- as.vector(by(booldata, INDICES = booldata$PTID, FUN = function(x) x$vaccine[1] == "VACCINE"))
posteriors <- 1 - fit$posteriors[, -1]
par(mfrow = c(4, 6), mar = rep(1, 4))
for(i in 1:length(subsets)) {
rocfit <- roc(vaccine ~  posteriors[, i])
print(plot(rocfit, main = paste(i, "- AUC", round(rocfit$auc, 3))))
}
posteriors <- fit$posteriors[-1, 2:ncol(fit$posteriors), drop = FALSE]
par(mfrow = c(4, 6), mar = rep(1, 4))
#par(mfrow = c(3, 3), mar = rep(1, 4))
auc <- numeric(length(subsets))
for(j in 1:length((subsetIndex))) {
i <- subsetIndex[j]
try(rocfit <- roc(!vaccine ~ posteriors[, i]))
try(rocfit <- roc(vaccine ~ posteriors[, i]))
auc[i] <- rocfit$auc
print(plot(rocfit, main = paste(i, "- AUC", round(rocfit$auc, 3))))
}
posteriors <- fit$posteriors[, -1, drop = FALSE]
par(mfrow = c(4, 6), mar = rep(1, 4))
#par(mfrow = c(3, 3), mar = rep(1, 4))
auc <- numeric(length(subsets))
for(j in 1:length((subsetIndex))) {
i <- subsetIndex[j]
try(rocfit <- roc(!vaccine ~ posteriors[, i]))
try(rocfit <- roc(vaccine ~ posteriors[, i]))
auc[i] <- rocfit$auc
print(plot(rocfit, main = paste(i, "- AUC", round(rocfit$auc, 3))))
}
fit$posteriors
fit$posteriors$ptid
fit$posteriors$id
vaccine <- as.numeric(by(booldata, booldata$PTID, function(x) x$vaccine[1] == "VACCINE"))
posteriors <- fit$posteriors[, -1, drop = FALSE]
par(mfrow = c(4, 6), mar = rep(1, 4))
#par(mfrow = c(3, 3), mar = rep(1, 4))
auc <- numeric(length(subsets))
for(j in 1:length((subsetIndex))) {
i <- subsetIndex[j]
try(rocfit <- roc(!vaccine ~ posteriors[, i]))
try(rocfit <- roc(vaccine ~ posteriors[, i]))
auc[i] <- rocfit$auc
print(plot(rocfit, main = paste(i, "- AUC", round(rocfit$auc, 3))))
}
warnings()
try(rocfit <- roc(!vaccine ~ posteriors[, i]))
roc(vaccine ~ posteriors[,5])
posteriors[,2]
posteriors[,5]
cbind(posteriors[,5], vaccine)
leaves
parents
leaves
tempdat$ptid
unique(tempdat$ptid)
1  20003 control
2  20056     25k
3  20064     25k
4  20070     25k
5  30053     25k
6  30060     25k
7  40068     25k
8  50050     25k
9  50071 control
10 60051     25k
11 60061 control
12 60072     25k
13 80058     25k
tempdat <- subset(malaria, parent %in% parents)
tempdat <- tempdat[order(tempdat$ptid, tempdat$population, tempdat$stim), ]
tempdat$treatment <- factor(as.numeric((tempdat$stim == "PfRBC") * tempdat$infection))
by(tempdat, tempdat$population, function(x) do.call("cbind", by(x, x$visitno, function(y) y$count)))
parents
parents <- parents[parents %in% unique(malaria$parent)]
parents <- parents[c(1, 2, 3, 5, 6, 9, 10, 11)]
tempdat <- subset(malaria, parent %in% parents)
tempdat <- tempdat[order(tempdat$ptid, tempdat$population, tempdat$stim), ]
tempdat$treatment <- factor(as.numeric((tempdat$stim == "PfRBC") * tempdat$infection))
by(tempdat, tempdat$population, function(x) do.call("cbind", by(x, x$visitno, function(y) y$count)))
preAssignment <- by(tempdat, INDICES = tempdat$ptid, preAssign)
preAssignment <- do.call("rbind", preAssignment)
system.time(fit <- subsetResponseMixtureRcpp(count ~  treatment * visitno,
sub.population = factor(tempdat$population),
N = parentcount, id =  ptid,
data = tempdat,
treatment = treatment,
updateLag = 5,
nsamp = 20, maxIter = 15,
initMHcoef = 1,
randomAssignProb = 0.0,
covarianceMethod = "sparse",
smallCounts = TRUE,
sparseGraph = TRUE,
betaDispersion = FALSE,
centerCovariance = FALSE,
preAssignment = preAssignment,
dataReplicates = 10))
library(flowReMix)
preAssignment <- by(tempdat, INDICES = tempdat$ptid, preAssign)
preAssignment <- do.call("rbind", preAssignment)
system.time(fit <- subsetResponseMixtureRcpp(count ~  treatment * visitno,
sub.population = factor(tempdat$population),
N = parentcount, id =  ptid,
data = tempdat,
treatment = treatment,
updateLag = 5,
nsamp = 20, maxIter = 15,
initMHcoef = 1,
randomAssignProb = 0.0,
covarianceMethod = "sparse",
smallCounts = TRUE,
sparseGraph = TRUE,
betaDispersion = FALSE,
centerCovariance = FALSE,
preAssignment = preAssignment,
dataReplicates = 10))
parents <- parents[parents %in% unique(malaria$parent)]
parents <- parents[c(1, 2, 3, 5, 6, 9, 10, 11)]
tempdat <- subset(malaria, parent %in% parents)
tempdat <- tempdat[order(tempdat$ptid, tempdat$population, tempdat$stim), ]
tempdat$treatment <- factor(as.numeric((tempdat$stim == "PfRBC") * tempdat$infection))
by(tempdat, tempdat$population, function(x) do.call("cbind", by(x, x$visitno, function(y) y$count)))
preAssignment <- by(tempdat, INDICES = tempdat$ptid, preAssign)
preAssignment <- do.call("rbind", preAssignment)
system.time(fit <- subsetResponseMixtureRcpp(count ~  treatment * visitno,
sub.population = factor(tempdat$population),
N = parentcount, id =  ptid,
data = tempdat,
treatment = treatment,
updateLag = 5,
nsamp = 20, maxIter = 15,
initMHcoef = 1,
randomAssignProb = 0.0,
covarianceMethod = "sparse",
smallCounts = TRUE,
sparseGraph = TRUE,
betaDispersion = FALSE,
centerCovariance = FALSE,
preAssignment = preAssignment,
dataReplicates = 10))
tempdat$trea
tempdat$treatment
tempdat$treatment <- factor(as.numeric((tempdat$stim == "PfRBC") * tempdat$infection))
data(malaria)
names(malaria)
table(malaria$experiment)
unique(malaria$ptid)
unique(malaria$population)
populations <- unique(malaria$population)
parents <- unique(malaria$parent)
leaves <- populations[!(populations %in% parents) ]
unique(malaria$stim)
malaria <- subset(malaria, stim %in% c("uRBC", "PfRBC"))
malaria <- subset(malaria, population %in% leaves)
malaria$infection <- TRUE
malaria$infection[malaria$ptid %in% c("60061", "50071", "20003")] <- FALSE
parents <- parents[parents %in% unique(malaria$parent)]
parents <- parents[c(1, 2, 3, 5, 6, 9, 10, 11)]
tempdat <- subset(malaria, parent %in% parents)
tempdat <- tempdat[order(tempdat$ptid, tempdat$population, tempdat$stim), ]
tempdat$treatment <- factor(as.numeric((tempdat$stim == "PfRBC") * tempdat$infection))
by(tempdat, tempdat$population, function(x) do.call("cbind", by(x, x$visitno, function(y) y$count)))
preAssignment <- by(tempdat, INDICES = tempdat$ptid, preAssign)
preAssignment <- do.call("rbind", preAssignment)
system.time(fit <- subsetResponseMixtureRcpp(count ~  treatment * visitno,
sub.population = factor(tempdat$population),
N = parentcount, id =  ptid,
data = tempdat,
treatment = treatment,
updateLag = 5,
nsamp = 20, maxIter = 15,
initMHcoef = 1,
randomAssignProb = 0.0,
covarianceMethod = "sparse",
smallCounts = TRUE,
sparseGraph = TRUE,
betaDispersion = FALSE,
centerCovariance = FALSE,
preAssignment = preAssignment,
dataReplicates = 10))
preAssign <- function(dat) {
subsets <- unique(dat$population)
nSubsets <- length(subsets)
if(dat$infection[1]) {
preAssign <- rep(-1, nSubsets)
} else {
preAssign <- rep(0, nSubsets)
}
result <- data.frame(id = dat$ptid[1], subset = subsets, assign = preAssign)
return(result)
}
parents <- parents[parents %in% unique(malaria$parent)]
parents <- parents[c(1, 2, 3, 5, 6, 9, 10, 11)]
tempdat <- subset(malaria, parent %in% parents)
tempdat <- tempdat[order(tempdat$ptid, tempdat$population, tempdat$stim), ]
tempdat$treatment <- factor(as.numeric((tempdat$stim == "PfRBC") * tempdat$infection))
by(tempdat, tempdat$population, function(x) do.call("cbind", by(x, x$visitno, function(y) y$count)))
preAssignment <- by(tempdat, INDICES = tempdat$ptid, preAssign)
preAssignment <- do.call("rbind", preAssignment)
system.time(fit <- subsetResponseMixtureRcpp(count ~  treatment * visitno,
sub.population = factor(tempdat$population),
N = parentcount, id =  ptid,
data = tempdat,
treatment = treatment,
updateLag = 5,
nsamp = 20, maxIter = 15,
initMHcoef = 1,
randomAssignProb = 0.0,
covarianceMethod = "sparse",
smallCounts = TRUE,
sparseGraph = TRUE,
betaDispersion = FALSE,
centerCovariance = FALSE,
preAssignment = preAssignment,
dataReplicates = 10))
require(glmnet)
parents <- parents[parents %in% unique(malaria$parent)]
parents <- parents[c(1, 2, 3, 5, 6, 9, 10, 11)]
tempdat <- subset(malaria, parent %in% parents)
tempdat <- tempdat[order(tempdat$ptid, tempdat$population, tempdat$stim), ]
tempdat$treatment <- factor(as.numeric((tempdat$stim == "PfRBC") * tempdat$infection))
by(tempdat, tempdat$population, function(x) do.call("cbind", by(x, x$visitno, function(y) y$count)))
preAssignment <- by(tempdat, INDICES = tempdat$ptid, preAssign)
preAssignment <- do.call("rbind", preAssignment)
system.time(fit <- subsetResponseMixtureRcpp(count ~  treatment * visitno,
sub.population = factor(tempdat$population),
N = parentcount, id =  ptid,
data = tempdat,
treatment = treatment,
updateLag = 5,
nsamp = 20, maxIter = 15,
initMHcoef = 1,
randomAssignProb = 0.0,
covarianceMethod = "sparse",
smallCounts = TRUE,
sparseGraph = TRUE,
betaDispersion = FALSE,
centerCovariance = FALSE,
preAssignment = preAssignment,
dataReplicates = 10))
parents <- parents[parents %in% unique(malaria$parent)]
parents <- parents[c(1, 2, 3, 5, 6, 9, 10, 11)]
tempdat <- subset(malaria, parent %in% parents)
tempdat <- tempdat[order(tempdat$ptid, tempdat$population, tempdat$stim), ]
tempdat$treatment <- factor(as.numeric((tempdat$stim == "PfRBC") * tempdat$infection))
by(tempdat, tempdat$population, function(x) do.call("cbind", by(x, x$visitno, function(y) y$count)))
preAssignment <- by(tempdat, INDICES = tempdat$ptid, preAssign)
preAssignment <- do.call("rbind", preAssignment)
system.time(fit <- subsetResponseMixtureRcpp(count ~  treatment * visitno,
sub.population = factor(tempdat$population),
N = parentcount, id =  ptid,
data = tempdat,
treatment = treatment,
updateLag = 5,
nsamp = 40, maxIter = 15,
initMHcoef = 1,
randomAssignProb = 1,
covarianceMethod = "sparse",
smallCounts = TRUE,
sparseGraph = TRUE,
betaDispersion = FALSE,
centerCovariance = FALSE,
preAssignment = preAssignment,
dataReplicates = 10))
parents
parents <- parents[parents %in% unique(malaria$parent)]
parents
parents <- unique(malaria$parent)
leaves <- populations[!(populations %in% parents) ]
parents <- parents[parents %in% unique(malaria$parent)]
parents <- parents[c(1, 2, 3, 5, 6, 9, 10, 11)]
parents
tempdat <- subset(malaria, parent %in% parents)
tempdat <- tempdat[order(tempdat$ptid, tempdat$population, tempdat$stim), ]
tempdat$treatment <- factor(as.numeric((tempdat$stim == "PfRBC") * tempdat$infection))
by(tempdat, tempdat$population, function(x) do.call("cbind", by(x, x$visitno, function(y) y$count)))
preAssignment <- by(tempdat, INDICES = tempdat$ptid, preAssign)
preAssignment <- do.call("rbind", preAssignment)
system.time(fit <- subsetResponseMixtureRcpp(count ~  treatment * visitno,
sub.population = factor(tempdat$population),
N = parentcount, id =  ptid,
data = tempdat,
treatment = treatment,
updateLag = 5,
nsamp = 40, maxIter = 15,
initMHcoef = 1,
randomAssignProb = 1,
covarianceMethod = "sparse",
smallCounts = TRUE,
sparseGraph = TRUE,
betaDispersion = FALSE,
centerCovariance = FALSE,
preAssignment = preAssignment,
dataReplicates = 10))
