
R version 3.3.1 (2016-06-21) -- "Bug in Your Hair"
Copyright (C) 2016 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(flowReMix)
> library(magrittr)
> library(dplyr)

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> args <- commandArgs(TRUE)
> eval(parse(text=args[[1]]))
> setting <- as.numeric(setting)
> ncores <- 1
> 
> # Loading data ----
> malbool <- readRDS("data/malaria_booleans.rds")
> names(malbool) <- tolower(names(malbool))
> 
> # Setting up stimulations -----
> malbool$subset <- with(malbool, (interaction(parent, population, sep = "/")))
> malbool$stim <- as.character(malbool$stim)
> malbool$stim[malbool$stim == "Cells Only"] <- "ctrl"
> malbool$stim[malbool$stim == "ctr SPZ"] <- "ctrl"
> malbool$stim[malbool$stim == "PfSPZ"] <- "SPZ"
> malbool$stimgroup <- "SPZ"
> malbool$stimgroup[malbool$stim %in% c("uRBC", "PfRBC")] <- "RBC"
> malbool$stim[malbool$stim == "uRBC"] <- "ctrl"
> malbool$stim <- factor(malbool$stim)
> 
> # Defining and screening subsets ---
> malbool$subset <- factor(with(malbool, (interaction(stimgroup, subset, sep = "/"))))
> 
> # Screening based on mixed models ---------
> # library(lme4)
> # subsets <- levels(malbool$subset)
> # screenResults <- data.frame(subset = subsets, pvalue = 1)
> # for(i in 1:length(subsets)) {
> #   pop <- subsets[[i]]
> #   subdat <- subset(malbool, subset == pop)
> #   subdat$sampind <- 1:nrow(subdat)
> #
> #   fullmod <- NULL
> #   try(fullmod <- glmer(cbind(count, parentcount - count) ~ stim * visitno + (1|sampind) + (1|ptid),
> #                    family = "binomial",
> #                    data = subdat))
> #   if(is.null(fullmod)) next
> #   fullLogLik <- summary(fullmod)$logLik[[1]]
> #
> #   nullmod <- NULL
> #   try(nullmod <- glmer(cbind(count, parentcount - count) ~ stim + (1|sampind) + (1|ptid),
> #                    family = "binomial",
> #                    data = subdat))
> #   if(is.null(nullmod)) next
> #   nullLoglik <- summary(nullmod)$logLik[[1]]
> #
> #   df <- nrow(summary(fullmod)$coefficients) - nrow(summary(nullmod)$coefficients)
> #   chisqStat <- 2 * (fullLogLik - nullLoglik)
> #   screenResults$pvalue[i] <- 1 - pchisq(chisqStat, df)
> #   print(screenResults[i, ])
> # }
> # saveRDS(screenResults, file = "data/malboolScreen.rds")
> screenResults <- readRDS(file = "data/malboolScreen.rds")
> screenResults <- screenResults[order(screenResults$pvalue), ]
> malbool <- subset(malbool, subset %in% screenResults[1:50, 1])
> malbool$subset <- factor(malbool$subset)
> 
> # counts <- by(malbool, list(malbool$subset), function(x) x$count)
> # dropsubsets <- sapply(counts, function(x) mean(x >= 2) < 0.15)
> # names(counts)[!dropsubsets]
> # malbool$subset <- as.character(malbool$subset)
> # malbool <- subset(malbool, subset %in% names(counts)[!dropsubsets])
> 
> # Setting correct order for visits ---
> malbool$visitno <- as.character(malbool$visitno)
> malbool$visitno[malbool$visitno %in% c("Day 13-Pos (day of blood stage parasitemia)",
+                                        "Day 14-Pos (day of blood stage parasitemia)",
+                                        "Day 19-Pos (day of blood stage parasitemia)",
+                                        "Day 11-Pos (day of blood stage parasitemia)",
+                                        "Day 17-Pos (day of blood stage parasitemia)")] <- "pos"
> malbool$visitno <- factor(malbool$visitno, levels = c("Day 0", "Day 9", "pos", "Day 28", "Day 56", "Day 168"))
> 
> # Analysis Parameters -----
> configurations <- expand.grid(iterations = c(50),
+                               mcEM = TRUE,
+                               disp = c(50),
+                               npost = c(7),
+                               seed = 1:40,
+                               visitno =  c("pos", "Day 56", "Day 168"))
> config <- configurations[setting, ]
> niter <- config[["iterations"]]
> lag <- round(niter / 3)
> mcEM <- config[["mcEM"]]
> npost <- config[["npost"]]
> seed <- config[["seed"]]
> disp <- config[["disp"]]
> visit = config[["visitno"]]
> stabilityReps <- 50
> 
> # Control Object --------
> control <- flowReMix_control(updateLag = lag, nsamp = 50, initMHcoef = 1,
+                              keepEach = 5,
+                              nPosteriors = npost, centerCovariance = TRUE,
+                              maxDispersion = disp * 1000, minDispersion = 10^7,
+                              randomAssignProb = 10^-8, intSampSize = 50,
+                              lastSample = NULL, isingInit = -log(99),
+                              markovChainEM = mcEM,
+                              initMethod = "robust",
+                              preAssignCoefs = 1,
+                              seed = seed,
+                              ncores = ncores,
+                              isingWprior = FALSE,
+                              zeroPosteriorProbs = FALSE,
+                              isingStabilityReps = stabilityReps,
+                              randStabilityReps = 0,
+                              learningRate = 0.75,
+                              keepWeightPercent = 0.9,
+                              sampleNew = FALSE)
> 
> malbool$allstims <- malbool$subset %>% as.character() %>%
+   strsplit("/") %>% sapply(function(x) paste(x[-1], collapse = "/")) %>%
+   factor()
> 
> # Analysis --------
> malbool <- subset(malbool, subset %in% levels(subset))
> malbool$subset <- factor(malbool$subset)
> malbool <- subset(malbool, as.character(visitno) == as.character(visit))
> fit <- flowReMix(cbind(count, parentcount - count) ~ stim,
+                  subject_id = ptid,
+                  cell_type = subset,
+                  cluster_variable = stim,
+                  data = malbool,
+                  covariance = "sparse",
+                  ising_model = "sparse",
+                  regression_method = "robust",
+                  cluster_assignment = TRUE,
+                  iterations = niter,
+                  parallel = TRUE,
+                  verbose = TRUE, control = control)
Estimating model via sequential computation
[1] "Initializing Regression Equations"
Loading required package: foreach
Loading required package: rngtools
Loading required package: pkgmaker
Loading required package: registry

Attaching package: ‘pkgmaker’

The following object is masked from ‘package:base’:

    isNamespaceLoaded


[1] "Starting Stochastic EM"
[1] "Sampling!"
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|

[1] "Updating Ising!"
[1] "Estimating Covariance!"
          levelP1  levelP2  levelP3  levelP4  levelP5  levelP6  levelP7 
   1.000    0.027    0.007    0.011    0.091    0.100    0.071    0.054 
 levelP8  levelP9 levelP10 levelP11 levelP12 levelP13 levelP14 levelP15 
   0.200    0.011    0.032    0.079    0.070    0.114    0.104    0.145 
levelP16 levelP17 levelP18 levelP19 levelP20 levelP21 levelP22 levelP23 
   0.107    0.071    0.009    0.079    0.011    0.016    0.075    0.014 
levelP24 levelP25 levelP26 levelP27 levelP28 levelP29 levelP30 levelP31 
   0.068    0.077    0.429    0.011    0.168    0.007    0.245    0.071 
levelP32 levelP33 levelP34 levelP35 levelP36 levelP37 levelP38 levelP39 
   0.007    0.089    0.198    0.039    0.073    0.075    0.005    0.029 
levelP40 levelP41 levelP42 levelP43 levelP44 levelP45 levelP46 levelP47 
   0.009    0.075    0.030    0.068    0.111    0.071    0.018    0.016 
levelP48 levelP49 levelP50 
   0.016    0.496    0.018 
      M1       M2       M3       M4       M5       M6       M7       M8 
10000000 10000000 10000000 10000000 10000000 10000000 10000000 10000000 
      M9      M10      M11      M12      M13      M14      M15      M16 
10000000 10000000 10000000 10000000 10000000 10000000 10000000 10000000 
     M17      M18      M19      M20      M21      M22      M23      M24 
10000000 10000000 10000000 10000000 10000000 10000000 10000000 10000000 
     M25      M26      M27      M28      M29      M30      M31      M32 
10000000 10000000 10000000 10000000 10000000 10000000 10000000 10000000 
     M33      M34      M35      M36      M37      M38      M39      M40 
10000000 10000000 10000000 10000000 10000000 10000000 10000000 10000000 
     M41      M42      M43      M44      M45      M46      M47      M48 
10000000 10000000 10000000 10000000 10000000 10000000 10000000 10000000 
     M49      M50 
10000000 10000000 
         [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9] [,10] [,11] [,12]
MH      1.500 1.500 1.500 1.500 0.900 0.500 1.100 1.100 1.500 1.100 0.900 1.500
ratevec 0.701 0.619 0.653 0.581 0.212 0.180 0.271 0.262 0.461 0.274 0.224 0.692
var     0.272 0.698 0.759 1.167 5.059 4.693 4.872 5.067 0.959 4.495 3.835 0.285
        [,13] [,14] [,15] [,16] [,17] [,18] [,19] [,20] [,21] [,22] [,23] [,24]
MH      0.500 0.500 0.500 0.500 0.900 1.500 1.500 1.500 1.500 1.500 1.500 1.500
ratevec 0.110 0.124 0.171 0.156 0.191 0.361 0.360 0.456 0.408 0.374 0.324 0.372
var     2.462 2.391 4.738 4.735 1.796 2.633 2.914 1.041 2.119 2.387 2.959 1.371
        [,25] [,26] [,27] [,28] [,29] [,30] [,31] [,32] [,33] [,34] [,35] [,36]
MH      1.500 0.500 1.500 1.500 1.500 1.500 1.500 1.500 1.500 1.500 1.500 1.500
ratevec 0.425 0.178 0.446 0.526 0.666 0.557 0.677 0.636 0.663 0.681 0.605 0.624
var     1.680 3.531 1.151 1.147 0.535 1.078 0.408 0.556 0.593 0.329 0.651 0.636
        [,37] [,38] [,39] [,40] [,41] [,42] [,43] [,44] [,45] [,46] [,47] [,48]
MH      1.500 1.500 1.500 1.500 1.500 1.500 1.500 1.500 1.500 1.500 1.500 1.500
ratevec 0.678 0.688 0.549 0.714 0.666 0.384 0.347 0.511 0.558 0.654 0.670 0.688
var     0.374 0.083 1.049 0.047 0.440 2.272 1.513 1.478 0.648 0.348 0.535 0.303
        [,49] [,50]
MH      1.500 1.500
ratevec 0.630 0.702
var     0.342 0.049
[1] "Updating Regression"
[1] "Sampling!"
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|

[1] "Updating Ising!"
[1] "Estimating Covariance!"
Error in eigen(S, symmetric = TRUE) : infinite or missing values in 'x'
In addition: There were 33 warnings (use warnings() to see them)
[1] "shit"
Error: dims [product 2500] do not match the length of object [0]
Execution halted
